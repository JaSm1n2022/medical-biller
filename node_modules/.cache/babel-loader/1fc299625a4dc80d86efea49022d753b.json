{"ast":null,"code":"import _objectSpread from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/* eslint-disable prefer-promise-reject-errors */\nimport axios from 'axios';\nimport { getAuthToken } from '../../utils/storageManager';\nimport redirectToSignIn from '../../utils/redirectToSignIn';\nimport { apiConfig } from '../../config';\nvar API_URL = apiConfig.API_URL;\nvar options = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\n/**\n * Sends request\n * @param {String} path - path\n * @param {Boolean} withAuth - path\n * @returns {Promise} - request, resolved value is contains response.data\n */\nvar request = function request(path) {\n  var withAuth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (withAuth) {\n    options.headers.Authorization = \"Bearer \".concat(getAuthToken());\n  }\n  options.url = \"\".concat(API_URL).concat(path);\n  return new Promise(function (resolve, reject) {\n    axios(options).then(function (_ref) {\n      var _ref$data = _ref.data,\n        data = _ref$data.data,\n        meta = _ref$data.meta;\n      return resolve({\n        data: data,\n        meta: meta\n      });\n    })[\"catch\"](function (error) {\n      // for timeout error do dispatch(showNetworkError(true));\n      if (error.message === 'Network Error') {\n        // dispatch(showNetworkError(true));\n        alert('No Internet in your browser or back-end server is disconnected');\n      }\n      if (error.response && error.response.status === 401) {\n        redirectToSignIn();\n      }\n      reject(error);\n    });\n  });\n};\n\n/**\n * Sends get request\n * @param {String} path - fetch url path\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n * @param {Object | null} params - request query params\n * @returns {Promise} - get request\n */\nexport var get = function get(path, withAuth, headers, params) {\n  options.method = 'GET';\n  options.params = _objectSpread({}, params);\n  return request(path, withAuth);\n};\n\n/**\n * Sends post request\n * @param {String} path - fetch url path\n * @param {Object} data - request body\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n * @param {Object | Null} configs - request options configs\n * @returns {Promise} - post request\n */\nexport var post = function post(path, data, withAuth, headers, configs) {\n  options.method = 'POST';\n  options.data = data;\n  options.headers = _objectSpread(_objectSpread({}, options.headers), headers);\n  if (configs) options = _objectSpread(_objectSpread({}, options), configs);\n  return request(path, withAuth);\n};\n\n/**\n * Send delete request\n * @param {String} path - fetch url path\n * @param {Object} data - request body\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n * @param {Object | null} params - request query params\n * @returns {Promise} - post request\n */\nexport var sendDelete = function sendDelete(path, data, withAuth, headers, params) {\n  options.method = 'DELETE';\n  options.data = data;\n  options.headers = _objectSpread(_objectSpread({}, options.headers), headers);\n  options.params = _objectSpread({}, params);\n  return request(path, withAuth);\n};\n\n/**\n * Sends patch request\n * @param {String} path - fetch url path\n * @param {Object} data - request body\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n *  * @param {Object | null} params - request query params\n * @returns {Promise} - post request\n */\nexport var patch = function patch(path, data, withAuth, headers, params) {\n  options.method = 'PATCH';\n  options.data = data;\n  options.headers = _objectSpread(_objectSpread({}, options.headers), headers);\n  options.params = _objectSpread({}, params);\n  return request(path, withAuth);\n};\n\n/**\n * Sends put request\n * @param {String} path - fetch url path\n * @param {Object} data - request body\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n * @returns {Promise} - post request\n */\nexport var put = function put(path, data, withAuth, headers) {\n  options.method = 'PUT';\n  options.data = data;\n  options.headers = _objectSpread(_objectSpread({}, options.headers), headers);\n  return request(path, withAuth);\n};\nexport var sendPut = function sendPut(path, data, withAuth, headers) {\n  options.method = 'PUT';\n  options.data = data;\n  options.headers = _objectSpread(_objectSpread({}, options.headers), headers);\n  return request(path, withAuth);\n};","map":{"version":3,"names":["axios","getAuthToken","redirectToSignIn","apiConfig","API_URL","options","headers","request","path","withAuth","arguments","length","undefined","Authorization","concat","url","Promise","resolve","reject","then","_ref","_ref$data","data","meta","error","message","alert","response","status","get","params","method","_objectSpread","post","configs","sendDelete","patch","put","sendPut"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/src/modules/api/request.js"],"sourcesContent":["/* eslint-disable prefer-promise-reject-errors */\nimport axios from 'axios';\n\nimport { getAuthToken } from '../../utils/storageManager';\nimport redirectToSignIn from '../../utils/redirectToSignIn';\n\nimport { apiConfig } from '../../config';\n\nconst { API_URL } = apiConfig;\n\nlet options = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\n/**\n * Sends request\n * @param {String} path - path\n * @param {Boolean} withAuth - path\n * @returns {Promise} - request, resolved value is contains response.data\n */\nconst request = (path, withAuth = true) => {\n  if (withAuth) {\n    options.headers.Authorization = `Bearer ${getAuthToken()}`;\n  }\n\n  options.url = `${API_URL}${path}`;\n\n  return new Promise((resolve, reject) => {\n    axios(options)\n      .then(({ data: { data, meta } }) => resolve({ data, meta }))\n      .catch((error) => {\n        // for timeout error do dispatch(showNetworkError(true));\n        if (error.message === 'Network Error') {\n          // dispatch(showNetworkError(true));\n          alert('No Internet in your browser or back-end server is disconnected');\n        }\n        if (error.response && error.response.status === 401) {\n          redirectToSignIn();\n        }\n        reject(error);\n      });\n  });\n};\n\n/**\n * Sends get request\n * @param {String} path - fetch url path\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n * @param {Object | null} params - request query params\n * @returns {Promise} - get request\n */\nexport const get = (path, withAuth, headers, params) => {\n  options.method = 'GET';\n  options.params = {\n    ...params\n  };\n\n  return request(path, withAuth);\n};\n\n/**\n * Sends post request\n * @param {String} path - fetch url path\n * @param {Object} data - request body\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n * @param {Object | Null} configs - request options configs\n * @returns {Promise} - post request\n */\nexport const post = (path, data, withAuth, headers, configs) => {\n  options.method = 'POST';\n  options.data = data;\n  options.headers = {\n    ...options.headers,\n    ...headers\n  };\n  if (configs) options = { ...options, ...configs };\n\n  return request(path, withAuth);\n};\n\n/**\n * Send delete request\n * @param {String} path - fetch url path\n * @param {Object} data - request body\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n * @param {Object | null} params - request query params\n * @returns {Promise} - post request\n */\nexport const sendDelete = (path, data, withAuth, headers, params) => {\n  options.method = 'DELETE';\n  options.data = data;\n  options.headers = {\n    ...options.headers,\n    ...headers\n  };\n  options.params = {\n    ...params\n  };\n\n  return request(path, withAuth);\n};\n\n/**\n * Sends patch request\n * @param {String} path - fetch url path\n * @param {Object} data - request body\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n *  * @param {Object | null} params - request query params\n * @returns {Promise} - post request\n */\nexport const patch = (path, data, withAuth, headers, params) => {\n  options.method = 'PATCH';\n  options.data = data;\n  options.headers = {\n    ...options.headers,\n    ...headers\n  };\n  options.params = {\n    ...params\n  };\n  return request(path, withAuth);\n};\n\n/**\n * Sends put request\n * @param {String} path - fetch url path\n * @param {Object} data - request body\n * @param {Boolean} withAuth - set bearer token if exists\n * @param {Object | Null} headers - request headers\n * @returns {Promise} - post request\n */\nexport const put = (path, data, withAuth, headers) => {\n  options.method = 'PUT';\n  options.data = data;\n  options.headers = {\n    ...options.headers,\n    ...headers\n  };\n  return request(path, withAuth);\n};\nexport const sendPut = (path, data, withAuth, headers) => {\n  options.method = 'PUT';\n  options.data = data;\n  options.headers = {\n    ...options.headers,\n    ...headers\n  };\n  return request(path, withAuth);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}