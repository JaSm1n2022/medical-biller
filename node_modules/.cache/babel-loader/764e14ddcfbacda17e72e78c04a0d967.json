{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nvar GoTrueAdminApi = /*#__PURE__*/function () {\n  function GoTrueAdminApi(_ref) {\n    var _ref$url = _ref.url,\n      url = _ref$url === void 0 ? '' : _ref$url,\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      fetch = _ref.fetch;\n    _classCallCheck(this, GoTrueAdminApi);\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(fetch);\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this)\n    };\n  }\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  _createClass(GoTrueAdminApi, [{\n    key: \"signOut\",\n    value: function signOut(jwt) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/logout\"), {\n                headers: this.headers,\n                jwt: jwt,\n                noResolveJson: true\n              });\n            case 3:\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: null\n              });\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              if (!isAuthError(_context.t0)) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: _context.t0\n              });\n            case 10:\n              throw _context.t0;\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n     * @param options.data Optional user metadata\n     */\n  }, {\n    key: \"inviteUserByEmail\",\n    value: function inviteUserByEmail(email) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/invite\"), {\n                body: {\n                  email: email,\n                  data: options.data\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _userResponse\n              });\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              if (!isAuthError(_context2.t0)) {\n                _context2.next = 10;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context2.t0\n              });\n            case 10:\n              throw _context2.t0;\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n  }, {\n    key: \"generateLink\",\n    value: function generateLink(params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var options, rest, body;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              options = params.options, rest = __rest(params, [\"options\"]);\n              body = Object.assign(Object.assign({}, rest), options);\n              if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n              }\n              _context3.next = 6;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/generate_link\"), {\n                body: body,\n                headers: this.headers,\n                xform: _generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n              });\n            case 6:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              if (!isAuthError(_context3.t0)) {\n                _context3.next = 13;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  properties: null,\n                  user: null\n                },\n                error: _context3.t0\n              });\n            case 13:\n              throw _context3.t0;\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"createUser\",\n    value: function createUser(attributes) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _request(this.fetch, 'POST', \"\".concat(this.url, \"/admin/users\"), {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              if (!isAuthError(_context4.t0)) {\n                _context4.next = 10;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context4.t0\n              });\n            case 10:\n              throw _context4.t0;\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n  }, {\n    key: \"listUsers\",\n    value: function listUsers(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var pagination, response, users, total, links;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              pagination = {\n                nextPage: null,\n                lastPage: 0,\n                total: 0\n              };\n              _context5.next = 4;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users\"), {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                  page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                  per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n                },\n                xform: _noResolveJsonResponse\n              });\n            case 4:\n              response = _context5.sent;\n              if (!response.error) {\n                _context5.next = 7;\n                break;\n              }\n              throw response.error;\n            case 7:\n              _context5.next = 9;\n              return response.json();\n            case 9:\n              users = _context5.sent;\n              total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n              links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n              if (links.length > 0) {\n                links.forEach(function (link) {\n                  var page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                  var rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                  pagination[\"\".concat(rel, \"Page\")] = page;\n                });\n                pagination.total = parseInt(total);\n              }\n              return _context5.abrupt(\"return\", {\n                data: Object.assign(Object.assign({}, users), pagination),\n                error: null\n              });\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](0);\n              if (!isAuthError(_context5.t0)) {\n                _context5.next = 20;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                data: {\n                  users: []\n                },\n                error: _context5.t0\n              });\n            case 20:\n              throw _context5.t0;\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 16]]);\n      }));\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"getUserById\",\n    value: function getUserById(uid) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 6:\n              _context6.prev = 6;\n              _context6.t0 = _context6[\"catch\"](0);\n              if (!isAuthError(_context6.t0)) {\n                _context6.next = 10;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context6.t0\n              });\n            case 10:\n              throw _context6.t0;\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"updateUserById\",\n    value: function updateUserById(uid, attributes) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return _request(this.fetch, 'PUT', \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                body: attributes,\n                headers: this.headers,\n                xform: _userResponse\n              });\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              if (!isAuthError(_context7.t0)) {\n                _context7.next = 10;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context7.t0\n              });\n            case 10:\n              throw _context7.t0;\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 6]]);\n      }));\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(id) {\n      var shouldSoftDelete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(id), {\n                headers: this.headers,\n                body: {\n                  should_soft_delete: shouldSoftDelete\n                },\n                xform: _userResponse\n              });\n            case 3:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 6:\n              _context8.prev = 6;\n              _context8.t0 = _context8[\"catch\"](0);\n              if (!isAuthError(_context8.t0)) {\n                _context8.next = 10;\n                break;\n              }\n              return _context8.abrupt(\"return\", {\n                data: {\n                  user: null\n                },\n                error: _context8.t0\n              });\n            case 10:\n              throw _context8.t0;\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[0, 6]]);\n      }));\n    }\n  }, {\n    key: \"_listFactors\",\n    value: function _listFactors(params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _yield$_request, data, error;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return _request(this.fetch, 'GET', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors\"), {\n                headers: this.headers,\n                xform: function xform(factors) {\n                  return {\n                    data: {\n                      factors: factors\n                    },\n                    error: null\n                  };\n                }\n              });\n            case 3:\n              _yield$_request = _context9.sent;\n              data = _yield$_request.data;\n              error = _yield$_request.error;\n              return _context9.abrupt(\"return\", {\n                data: data,\n                error: error\n              });\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](0);\n              if (!isAuthError(_context9.t0)) {\n                _context9.next = 13;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                data: null,\n                error: _context9.t0\n              });\n            case 13:\n              throw _context9.t0;\n            case 14:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[0, 9]]);\n      }));\n    }\n  }, {\n    key: \"_deleteFactor\",\n    value: function _deleteFactor(params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              _context10.next = 3;\n              return _request(this.fetch, 'DELETE', \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors/\").concat(params.id), {\n                headers: this.headers\n              });\n            case 3:\n              data = _context10.sent;\n              return _context10.abrupt(\"return\", {\n                data: data,\n                error: null\n              });\n            case 7:\n              _context10.prev = 7;\n              _context10.t0 = _context10[\"catch\"](0);\n              if (!isAuthError(_context10.t0)) {\n                _context10.next = 11;\n                break;\n              }\n              return _context10.abrupt(\"return\", {\n                data: null,\n                error: _context10.t0\n              });\n            case 11:\n              throw _context10.t0;\n            case 12:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[0, 7]]);\n      }));\n    }\n  }]);\n  return GoTrueAdminApi;\n}();\nexport { GoTrueAdminApi as default };","map":{"version":3,"sources":["../../src/GoTrueAdminApi.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n                    headers: this.headers,\n                    jwt,\n                    noResolveJson: true,\n                });\n                return { data: null, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n     * @param options.data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n                    body: { email, data: options.data },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    generateLink(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { options } = params, rest = __rest(params, [\"options\"]);\n                const body = Object.assign(Object.assign({}, rest), options);\n                if ('newEmail' in rest) {\n                    // replace newEmail with new_email in request body\n                    body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                    delete body['newEmail'];\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                    body: body,\n                    headers: this.headers,\n                    xform: _generateLinkResponse,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return {\n                        data: {\n                            properties: null,\n                            user: null,\n                        },\n                        error,\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const pagination = { nextPage: null, lastPage: 0, total: 0 };\n                const response = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                    query: {\n                        page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                        per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                    },\n                    xform: _noResolveJsonResponse,\n                });\n                if (response.error)\n                    throw response.error;\n                const users = yield response.json();\n                const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n                const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n                if (links.length > 0) {\n                    links.forEach((link) => {\n                        const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                        const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                        pagination[`${rel}Page`] = page;\n                    });\n                    pagination.total = parseInt(total);\n                }\n                return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { users: [] }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    deleteUser(id, shouldSoftDelete = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                    headers: this.headers,\n                    body: {\n                        should_soft_delete: shouldSoftDelete,\n                    },\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _listFactors(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                    headers: this.headers,\n                    xform: (factors) => {\n                        return { data: { factors }, error: null };\n                    },\n                });\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _deleteFactor(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map"]},"metadata":{},"sourceType":"module"}