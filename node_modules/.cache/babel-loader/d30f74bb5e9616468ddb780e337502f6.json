{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = require(\"react\");\nvar usePrevious = function usePrevious(value, initialValue) {\n  var ref = (0, _react.useRef)(initialValue);\n  (0, _react.useEffect)(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\nvar _default = usePrevious;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_react","require","usePrevious","initialValue","ref","useRef","useEffect","current","_default"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js"],"sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = require(\"react\");\nvar usePrevious = function usePrevious(value, initialValue) {\n  var ref = (0, _react.useRef)(initialValue);\n  (0, _react.useEffect)(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\nvar _default = usePrevious;\nexports.default = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,WAAQ,GAAG,KAAK,CAAC;AACxB,IAAIE,MAAM,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC7B,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACH,KAAK,EAAEI,YAAY,EAAE;EAC1D,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAEJ,MAAM,CAACK,MAAM,EAAEF,YAAY,CAAC;EAC1C,CAAC,CAAC,EAAEH,MAAM,CAACM,SAAS,EAAE,YAAY;IAChCF,GAAG,CAACG,OAAO,GAAGR,KAAK;EACrB,CAAC,CAAC;EACF,OAAOK,GAAG,CAACG,OAAO;AACpB,CAAC;AACD,IAAIC,QAAQ,GAAGN,WAAW;AAC1BJ,OAAO,WAAQ,GAAGU,QAAQ"},"metadata":{},"sourceType":"script"}