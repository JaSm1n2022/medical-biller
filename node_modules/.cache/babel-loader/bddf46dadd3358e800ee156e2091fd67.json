{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _setColumnId = _interopRequireDefault(require(\"../setColumnId\"));\nvar _computeFlexWidths = _interopRequireDefault(require(\"../utils/flex/computeFlexWidths\"));\nvar _mapColumns = _interopRequireDefault(require(\"../mapColumns\"));\nvar _defaultCheckColumnId = require(\"./defaultCheckColumnId\");\nvar _defaultRowExpandColumnId = require(\"./defaultRowExpandColumnId\");\nvar _defaultRowIndexColumnId = require(\"./defaultRowIndexColumnId\");\nvar _defaultGroupColumnId = require(\"./defaultGroupColumnId\");\nvar _defaultRowReorderColumnId = require(\"./defaultRowReorderColumnId\");\nvar _setComputedColumnWidths = _interopRequireDefault(require(\"./setComputedColumnWidths\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nvar DEFAULT_COLUMN_PROPS = {\n  isColumn: true,\n  keepFlex: true\n};\nvar defaultPivotGrandSummaryColumn = {\n  sortable: false,\n  draggable: false,\n  filterable: false\n};\nvar defaultPivotSummaryColumn = defaultPivotGrandSummaryColumn;\nvar emptyArray = [];\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar _default = function _default(_ref) {\n  var _ref$generatedColumns = _ref.generatedColumnsLength,\n    generatedColumnsLength = _ref$generatedColumns === void 0 ? 0 : _ref$generatedColumns,\n    columns = _ref.columns,\n    columnMinWidth = _ref.columnMinWidth,\n    columnMaxWidth = _ref.columnMaxWidth,\n    columnDefaultWidth = _ref.columnDefaultWidth,\n    columnWidth = _ref.columnWidth,\n    _ref$columnSizes = _ref.columnSizes,\n    columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,\n    _ref$columnVisibility = _ref.columnVisibilityMap,\n    columnVisibilityMap = _ref$columnVisibility === void 0 ? emptyObject : _ref$columnVisibility,\n    _ref$columnFlexes = _ref.columnFlexes,\n    columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes,\n    _ref$lockedColumnsSta = _ref.lockedColumnsState,\n    lockedColumnsState = _ref$lockedColumnsSta === void 0 ? emptyObject : _ref$lockedColumnsSta,\n    columnOrder = _ref.columnOrder,\n    computedPivotUniqueValuesPerColumn = _ref.computedPivotUniqueValuesPerColumn,\n    editable = _ref.editable,\n    pivot = _ref.pivot,\n    sortable = _ref.sortable,\n    filterable = _ref.filterable,\n    resizable = _ref.resizable,\n    pivotGrandSummaryColumn = _ref.pivotGrandSummaryColumn,\n    lockable = _ref.lockable,\n    checkboxColumn = _ref.checkboxColumn,\n    rowIndexColumn = _ref.rowIndexColumn,\n    filter = _ref.filter,\n    rtl = _ref.rtl,\n    filterValueMap = _ref.filterValueMap,\n    sortInfo = _ref.sortInfo,\n    showPivotSummaryColumns = _ref.showPivotSummaryColumns,\n    _ref$availableWidth = _ref.availableWidth,\n    availableWidth = _ref$availableWidth === void 0 ? 0 : _ref$availableWidth,\n    onRowReorder = _ref.onRowReorder,\n    rowReorderColumn = _ref.rowReorderColumn;\n  if (columnVisibilityMap) {\n    columnVisibilityMap = _objectSpread({}, columnVisibilityMap);\n  }\n  var groupColumnSummaryReducers = {};\n  var pivotColumnSummaryReducers = {};\n  var addSortInfo = function addSortInfo(col) {\n    col.computedSortable = (typeof col.sortable === 'boolean' ? col.sortable : sortable) || false;\n    col.computedSortInfo = null;\n    if (col.computedSortable && sortInfo) {\n      col.computedSortInfo = Array.isArray(sortInfo) ? sortInfo.filter(function (info) {\n        return info.name === col.id || info.id === col.id || info.name === col.sortName;\n      })[0] : sortInfo.name === col.id || sortInfo.id === col.id || sortInfo.name === col.sortName ? sortInfo : null;\n    }\n  };\n  var addFilterValue = function addFilterValue(col) {\n    col.computedFilterable = (typeof col.filterable === 'boolean' ? col.filterable : filterable) || undefined;\n    col.computedFilterValue = null;\n    if (col.computedFilterable && filterValueMap) {\n      col.computedFilterValue = filterValueMap[col.id];\n    }\n    if (col.computedFilterable === undefined && col.computedFilterValue) {\n      col.computedFilterable = true;\n    }\n    col.computedFilterable = !!col.computedFilterable;\n  };\n  var hasLockedStart = false;\n  var hasLockedEnd = false;\n  var rowExpandColumn;\n  var setComputedColumnWidthsParam = {\n    columnFlexes: columnFlexes,\n    columnSizes: columnSizes,\n    columnDefaultWidth: columnDefaultWidth,\n    columnWidth: columnWidth,\n    columnMinWidth: columnMinWidth,\n    columnMaxWidth: columnMaxWidth\n  };\n  var hasDedicatedGroupColumn = false;\n  var normalizedColumns = columns.map(function (column) {\n    return _objectSpread(_objectSpread({}, DEFAULT_COLUMN_PROPS), column);\n  }).map(_setColumnId[\"default\"]).map(function (col, i) {\n    col.computedInitialIndex = i - generatedColumnsLength;\n    (0, _setComputedColumnWidths[\"default\"])(col, setComputedColumnWidthsParam);\n    col.computedVisible = col.visible !== undefined ? !!col.visible : columnVisibilityMap[col.id] === false ? false : true;\n    if (col.computedVisible && pivot && !col.groupSummaryReducer && col.id !== _defaultGroupColumnId.id) {\n      col.computedVisible = false;\n    }\n    if (col.computedVisible === false) {\n      columnVisibilityMap[col.id] = false;\n    } else {\n      delete columnVisibilityMap[col.id];\n      if (col.id === _defaultGroupColumnId.id) {\n        hasDedicatedGroupColumn = true;\n      }\n    }\n    col.computedHeader = col.header === undefined ? col.name || '' : col.header;\n    col.computedLocked = col.locked;\n    if (col.computedLocked === undefined && lockedColumnsState[col.id] !== undefined) {\n      col.computedLocked = lockedColumnsState[col.id];\n    }\n    if (col.computedLocked === undefined && col.defaultLocked !== undefined) {\n      col.computedLocked = col.defaultLocked;\n    }\n    if (!filter || filter(col)) {\n      if (col.computedLocked === true || col.computedLocked === 'start') {\n        col.computedLocked = 'start';\n        hasLockedStart = true;\n      }\n      if (col.computedLocked === 'end') {\n        hasLockedEnd = true;\n      }\n    }\n    col.computedLocked = col.computedLocked || false;\n    if (col.id === _defaultRowExpandColumnId.id) {\n      rowExpandColumn = col;\n    }\n    if (col.enableColumnHover != null) {\n      col.computedEnableColumnHover = col.enableColumnHover;\n      delete col.enableColumnHover;\n    }\n    return col;\n  });\n  if (hasLockedStart) {\n    if (rowExpandColumn != null) {\n      rowExpandColumn.computedLocked = 'start';\n    }\n    if (checkboxColumn) {\n      var normalizedCheckboxColumn = normalizedColumns.filter(function (c) {\n        return c.checkboxColumn && c.id == _defaultCheckColumnId.id;\n      })[0];\n      if (normalizedCheckboxColumn) {\n        normalizedCheckboxColumn.computedLocked = 'start';\n      }\n    }\n    if (hasDedicatedGroupColumn) {\n      var normalizedGroupColumn = normalizedColumns.filter(function (c) {\n        return c.groupColumn && c.id == _defaultGroupColumnId.id;\n      })[0];\n      if (normalizedGroupColumn) {\n        normalizedGroupColumn.computedLocked = 'start';\n      }\n    }\n    var autoLockColumns = normalizedColumns.filter(function (c) {\n      return !!c.autoLock;\n    });\n    if (autoLockColumns.length) {\n      autoLockColumns.forEach(function (c) {\n        c.computedLocked = 'start';\n      });\n    }\n    if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n      var normalizedRowReorderColumn = normalizedColumns.filter(function (c) {\n        return c.id === _defaultRowReorderColumnId.id;\n      })[0];\n      if (normalizedRowReorderColumn) {\n        normalizedRowReorderColumn.computedLocked = 'start';\n      }\n    }\n  }\n  var computedEnableRowspan = false;\n  normalizedColumns.forEach(function (col, index) {\n    col.computedAbsoluteIndex = index;\n    addSortInfo(col);\n    addFilterValue(col);\n    if (typeof col.rowspan === 'function') {\n      computedEnableRowspan = true;\n    }\n    col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n    col.computedLockable = (typeof col.lockable !== 'boolean' ? lockable : col.lockable) || false;\n  });\n  var columnsMap = (0, _mapColumns[\"default\"])(normalizedColumns, {\n    showWarnings: true\n  });\n  var visibleColumns = normalizedColumns.filter(function (c) {\n    return c.computedVisible !== false;\n  });\n  if (columnOrder) {\n    if (checkboxColumn) {\n      var checkboxColumnIndex = columnOrder.indexOf(_defaultCheckColumnId.id);\n      if (checkboxColumnIndex == -1) {\n        columnOrder = [_defaultCheckColumnId.id].concat((0, _toConsumableArray2[\"default\"])(columnOrder));\n      }\n    }\n  }\n  if (rowExpandColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowExpandColumnIndex = columnOrder.indexOf(_defaultRowExpandColumnId.id);\n    if (rowExpandColumnIndex !== 0) {\n      columnOrder = [_defaultRowExpandColumnId.id].concat((0, _toConsumableArray2[\"default\"])(columnOrder.filter(function (id) {\n        return id != _defaultRowExpandColumnId.id;\n      })));\n    }\n  }\n  if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowReorderColumnIndex = columnOrder.indexOf(_defaultRowReorderColumnId.id);\n    if (rowReorderColumnIndex !== 0) {\n      columnOrder = [_defaultRowReorderColumnId.id].concat((0, _toConsumableArray2[\"default\"])(columnOrder.filter(function (id) {\n        return id !== _defaultRowReorderColumnId.id;\n      })));\n    }\n  }\n  if (rowIndexColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowIndexColumnIndex = columnOrder.indexOf(_defaultRowIndexColumnId.id);\n    if (rowIndexColumnIndex != 0) {\n      columnOrder = [].concat((0, _toConsumableArray2[\"default\"])(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        return col && col.groupSpacerColumn;\n      })), [_defaultRowIndexColumnId.id], (0, _toConsumableArray2[\"default\"])(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        if (!col) {\n          return false;\n        }\n        return id != _defaultRowIndexColumnId.id && !col.groupSpacerColumn;\n      })));\n    }\n  }\n  if (generatedColumnsLength) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var generatedColumns = visibleColumns.filter(function (c) {\n      return c.groupSpacerColumn;\n    });\n    var generatedColumnIds = generatedColumns.reduce(function (acc, col) {\n      acc[col.id] = true;\n      return acc;\n    }, {});\n    columnOrder = [].concat((0, _toConsumableArray2[\"default\"])(generatedColumns.map(function (c) {\n      return c.id;\n    })), (0, _toConsumableArray2[\"default\"])(columnOrder.filter(function (id) {\n      return !generatedColumnIds[id];\n    })));\n  }\n  if (columnOrder) {\n    var groupSpacerColumns = visibleColumns.filter(function (col) {\n      return col.groupSpacerColumn;\n    });\n    var groupColumns = visibleColumns.filter(function (col) {\n      return col.groupColumn && !col.groupSpacerColumn;\n    });\n    var ungroupColumns = visibleColumns.filter(function (col) {\n      return !col.groupColumn && !col.groupSpacerColumn;\n    });\n    visibleColumns = columnOrder.map(function (colId) {\n      return ungroupColumns.find(function (col) {\n        return col.id == colId;\n      });\n    }).filter(function (x) {\n      return !!x;\n    });\n    visibleColumns = [].concat((0, _toConsumableArray2[\"default\"])(groupSpacerColumns), (0, _toConsumableArray2[\"default\"])(groupColumns), (0, _toConsumableArray2[\"default\"])(visibleColumns));\n  }\n  if (typeof filter == 'function') {\n    visibleColumns = visibleColumns.filter(filter);\n  }\n  normalizedColumns.forEach(function (col) {\n    if (col.groupSummaryReducer) {\n      groupColumnSummaryReducers[col.id] = col.groupSummaryReducer;\n      if (!col.groupSummaryReducer.reducer && col.groupSummaryReducer.reduce) {\n        groupColumnSummaryReducers[col.id].reducer = col.groupSummaryReducer.reduce;\n      }\n    }\n  });\n  var groupColumn = visibleColumns.filter(function (col) {\n    return !!col.groupColumn;\n  })[0];\n  if (pivot && computedPivotUniqueValuesPerColumn && groupColumn) {\n    var aggregateColumns = visibleColumns.filter(function (col) {\n      return !!col.groupSummaryReducer;\n    });\n    var newColumns = [groupColumn].concat((0, _toConsumableArray2[\"default\"])(getPivotColumns(aggregateColumns, computedPivotUniqueValuesPerColumn, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns))).map(function (col) {\n      (0, _setComputedColumnWidths[\"default\"])(col, setComputedColumnWidthsParam);\n      col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n      return col;\n    });\n    visibleColumns = newColumns;\n    columnsMap = _objectSpread(_objectSpread({}, columnsMap), (0, _mapColumns[\"default\"])(newColumns, {\n      showWarnings: true\n    }));\n  }\n  var flexes = [];\n  var maxWidths = [];\n  var minWidths = [];\n  var minColumnsSize = 0;\n  var availableWidthForFlex = availableWidth;\n  visibleColumns.forEach(function (col) {\n    if (col.computedFlex == null) {\n      availableWidthForFlex -= col.computedWidth || col.computedDefaultWidth || col.computedMinWidth || 0;\n    }\n    flexes.push(col.computedFlex || 0);\n    maxWidths.push(col.computedMaxWidth || null);\n    minWidths.push(col.computedMinWidth || null);\n  });\n  availableWidthForFlex = Math.max(availableWidthForFlex, 0);\n  var flexWidths = (0, _computeFlexWidths[\"default\"])({\n    flexes: flexes,\n    availableSize: availableWidthForFlex,\n    maxWidths: maxWidths,\n    minWidths: minWidths\n  });\n  var totalFlexColumnCount = 0;\n  visibleColumns.forEach(function (col, index) {\n    if (col.computedFlex != null) {\n      col.computedWidth = flexWidths[index] || 0;\n      totalFlexColumnCount++;\n      minColumnsSize += col.minWidth || 0;\n    } else {\n      minColumnsSize += col.computedWidth || 0;\n    }\n  });\n  var unlockedColumns = visibleColumns;\n  var lockedStartColumns = [];\n  var lockedEndColumns = [];\n  if (hasLockedStart || hasLockedEnd) {\n    unlockedColumns = groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return !col.computedLocked && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return !col.computedLocked;\n    });\n    lockedStartColumns = hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'start' || col.groupColumn;\n    }) : emptyArray;\n    lockedEndColumns = hasLockedEnd ? groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end' && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end';\n    }) : emptyArray;\n    visibleColumns = [].concat((0, _toConsumableArray2[\"default\"])(lockedStartColumns), (0, _toConsumableArray2[\"default\"])(unlockedColumns), (0, _toConsumableArray2[\"default\"])(lockedEndColumns));\n  }\n  var visibleColumnsMap = (0, _mapColumns[\"default\"])(visibleColumns, {\n    showWarnings: true\n  });\n  var sumPrefixWidth = 0;\n  var totalLockedStartWidth = 0;\n  var totalLockedEndWidth = 0;\n  var totalUnlockedWidth = 0;\n  var columnWidthPrefixSums = [];\n  var computedHasColSpan = false;\n  visibleColumns.forEach(function (col, index, arr) {\n    col.computedVisibleIndex = index;\n    col.computedVisibleCount = arr.length;\n    if (col.colspan) {\n      computedHasColSpan = true;\n    }\n    col.computedOffset = sumPrefixWidth;\n    var computedLocked = col.computedLocked,\n      computedWidth = col.computedWidth;\n    if (computedLocked === 'start') {\n      totalLockedStartWidth += computedWidth || 0;\n    } else if (computedLocked === 'end') {\n      totalLockedEndWidth += computedWidth || 0;\n    } else {\n      totalUnlockedWidth += computedWidth || 0;\n    }\n    addSortInfo(col);\n    if (editable && col.editable === undefined) {\n      col.computedEditable = true;\n    }\n    if (col.editable !== undefined) {\n      col.computedEditable = col.editable;\n    }\n    columnWidthPrefixSums.push(col.computedOffset || 0);\n    sumPrefixWidth += computedWidth || 0;\n  });\n  if (pivot) {\n    pivot.forEach(function (pivotCol) {\n      if (typeof pivotCol !== 'string' && pivotCol.summaryReducer) {\n        pivotColumnSummaryReducers[pivotCol.name] = pivotCol.summaryReducer;\n      }\n    });\n  }\n  return {\n    pivotColumnSummaryReducers: pivotColumnSummaryReducers,\n    minColumnsSize: minColumnsSize,\n    totalFlexColumnCount: totalFlexColumnCount,\n    groupColumnSummaryReducers: Object.keys(groupColumnSummaryReducers).length ? groupColumnSummaryReducers : undefined,\n    totalComputedWidth: sumPrefixWidth,\n    totalLockedStartWidth: totalLockedStartWidth,\n    totalLockedEndWidth: totalLockedEndWidth,\n    totalUnlockedWidth: totalUnlockedWidth,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    unlockedColumns: unlockedColumns,\n    columnWidthPrefixSums: columnWidthPrefixSums,\n    columnVisibilityMap: columnVisibilityMap,\n    computedEnableRowspan: computedEnableRowspan,\n    computedHasColSpan: computedHasColSpan,\n    visibleColumns: visibleColumns,\n    allColumns: normalizedColumns,\n    columnsMap: columnsMap,\n    visibleColumnsMap: visibleColumnsMap\n  };\n};\nexports[\"default\"] = _default;\nvar getPivotGroupColumnForPath = function getPivotGroupColumnForPath(columnConfig, _ref2) {\n  var pivot = _ref2.pivot,\n    pivotGrandSummaryColumn = _ref2.pivotGrandSummaryColumn;\n  var pivotMap = pivot.reduce(function (acc, p) {\n    if (!p.summaryReducer) {\n      return acc;\n    }\n    var col = p ? p.summaryColumn || {} : {};\n    acc[p.name || p] = col;\n    return acc;\n  }, {});\n  if (pivotGrandSummaryColumn === true) {\n    pivotGrandSummaryColumn = {};\n  }\n  if (pivotGrandSummaryColumn) {\n    pivotGrandSummaryColumn.pivotGrandSummaryColumn = true;\n    pivotGrandSummaryColumn = _objectSpread(_objectSpread({}, defaultPivotGrandSummaryColumn), pivotGrandSummaryColumn);\n  }\n  columnConfig = _objectSpread(_objectSpread({}, defaultPivotSummaryColumn), columnConfig);\n  var _columnConfig = columnConfig,\n    pivotSummaryPath = _columnConfig.pivotSummaryPath;\n  var lastItem = pivotSummaryPath[pivotSummaryPath.length - 1];\n  var name = lastItem ? lastItem.field : null;\n  var col = !lastItem ? pivotGrandSummaryColumn : pivotMap[name] || {};\n  var result = columnConfig;\n  if (lastItem) {\n    columnConfig.header = \"Summary for \".concat(lastItem.field, \" \").concat(lastItem.value);\n  }\n  if (!pivotGrandSummaryColumn && !pivotMap[name]) {\n    return null;\n  }\n  if (col) {\n    if (typeof col === 'function') {\n      result = _objectSpread(_objectSpread({}, columnConfig), col(columnConfig));\n    } else {\n      result = _objectSpread(_objectSpread({}, columnConfig), col);\n    }\n  }\n  return result;\n};\nvar getPivotColumns = function getPivotColumns(aggregateColumns, uniqueValuesRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns) {\n  var parentGroups = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var pivotColumnPath = arguments.length > 7 ? arguments[7] : undefined;\n  var newColumns = [];\n  var field = uniqueValuesRoot.field,\n    values = uniqueValuesRoot.values;\n  var parentGroup = parentGroups[parentGroups.length - 1];\n  if (field && values) {\n    Object.keys(values).forEach(function (value) {\n      var groupId = \"\".concat(parentGroup ? parentGroup.name + '_' : '').concat(field, \":\").concat(value);\n      var group = {\n        name: groupId,\n        header: \"\".concat(field, \"-\").concat(value),\n        pivotPath: [{\n          value: value,\n          field: field\n        }]\n      };\n      if (parentGroup) {\n        group.group = parentGroup.name;\n        group.pivotPath = [].concat((0, _toConsumableArray2[\"default\"])(parentGroup.pivotPath || []), (0, _toConsumableArray2[\"default\"])(group.pivotPath));\n      }\n      var nextRoot = values[value];\n      pivotColumnPath = pivotColumnPath || [];\n      newColumns.push.apply(newColumns, (0, _toConsumableArray2[\"default\"])(getPivotColumns(aggregateColumns, nextRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns, [].concat((0, _toConsumableArray2[\"default\"])(parentGroups), [{\n        name: groupId,\n        pivotPath: group.pivotPath,\n        depth: parentGroup ? parentGroup.depth + 1 : 0\n      }]), [].concat((0, _toConsumableArray2[\"default\"])(pivotColumnPath), [value]))));\n      if (!parentGroup && showPivotSummaryColumns) {\n        var summaryCol = getPivotGroupColumnForPath({\n          header: \"Summary for \".concat(group.header),\n          id: \"__summary_\".concat(group.name),\n          pivotSummaryColumn: true,\n          pivotSummaryPath: group.pivotPath\n        }, {\n          pivot: pivot\n        });\n        if (summaryCol) {\n          newColumns.push(summaryCol);\n        }\n      }\n    });\n  } else {\n    newColumns.push.apply(newColumns, (0, _toConsumableArray2[\"default\"])(aggregateColumns.map(function (col) {\n      var result = _objectSpread(_objectSpread({}, col), {}, {\n        sortable: false,\n        showInContextMenu: false,\n        draggable: false,\n        pivotColumn: true,\n        pivotColumnPath: [].concat((0, _toConsumableArray2[\"default\"])(pivotColumnPath || []), [col.pivotName || col.name || col.id]),\n        id: \"\".concat(parentGroup.name, \"-\").concat(col.id),\n        group: parentGroup.name\n      });\n      if (columnSizes[result.id]) {\n        result.computedWidth = columnSizes[result.id];\n      }\n      return result;\n    })));\n    var prevParentGroup = parentGroups[parentGroups.length - 2];\n    if (showPivotSummaryColumns && prevParentGroup) {\n      var summaryCol = getPivotGroupColumnForPath({\n        group: prevParentGroup ? prevParentGroup.name : undefined,\n        header: \"Summary for \".concat(parentGroup.name, \" - \").concat(prevParentGroup ? prevParentGroup.name : ''),\n        id: \"__summary__\".concat(parentGroup.name),\n        pivotSummaryPath: parentGroup.pivotPath,\n        pivotSummaryColumn: true\n      }, {\n        pivot: pivot\n      });\n      if (summaryCol) {\n        newColumns.push(summaryCol);\n      }\n    }\n  }\n  if (!parentGroup && pivotGrandSummaryColumn && showPivotSummaryColumns) {\n    newColumns.push(getPivotGroupColumnForPath({\n      header: \"Grand summary\",\n      id: \"__summary__grand\",\n      pivotSummaryColumn: true,\n      pivotSummaryPath: []\n    }, {\n      pivot: pivot,\n      pivotGrandSummaryColumn: pivotGrandSummaryColumn\n    }));\n  }\n  return newColumns;\n};","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_toConsumableArray2","_defineProperty2","_setColumnId","_computeFlexWidths","_mapColumns","_defaultCheckColumnId","_defaultRowExpandColumnId","_defaultRowIndexColumnId","_defaultGroupColumnId","_defaultRowReorderColumnId","_setComputedColumnWidths","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","DEFAULT_COLUMN_PROPS","isColumn","keepFlex","defaultPivotGrandSummaryColumn","sortable","draggable","filterable","defaultPivotSummaryColumn","emptyArray","emptyObject","freeze","_default","_ref","_ref$generatedColumns","generatedColumnsLength","columns","columnMinWidth","columnMaxWidth","columnDefaultWidth","columnWidth","_ref$columnSizes","columnSizes","_ref$columnVisibility","columnVisibilityMap","_ref$columnFlexes","columnFlexes","_ref$lockedColumnsSta","lockedColumnsState","columnOrder","computedPivotUniqueValuesPerColumn","editable","pivot","resizable","pivotGrandSummaryColumn","lockable","checkboxColumn","rowIndexColumn","rtl","filterValueMap","sortInfo","showPivotSummaryColumns","_ref$availableWidth","availableWidth","onRowReorder","rowReorderColumn","groupColumnSummaryReducers","pivotColumnSummaryReducers","addSortInfo","col","computedSortable","computedSortInfo","Array","isArray","info","name","id","sortName","addFilterValue","computedFilterable","undefined","computedFilterValue","hasLockedStart","hasLockedEnd","rowExpandColumn","setComputedColumnWidthsParam","hasDedicatedGroupColumn","normalizedColumns","map","column","computedInitialIndex","computedVisible","visible","groupSummaryReducer","computedHeader","header","computedLocked","locked","defaultLocked","enableColumnHover","computedEnableColumnHover","normalizedCheckboxColumn","c","normalizedGroupColumn","groupColumn","autoLockColumns","autoLock","normalizedRowReorderColumn","computedEnableRowspan","index","computedAbsoluteIndex","rowspan","computedResizable","computedLockable","columnsMap","showWarnings","visibleColumns","checkboxColumnIndex","indexOf","concat","rowExpandColumnIndex","rowReorderColumnIndex","rowIndexColumnIndex","groupSpacerColumn","generatedColumns","generatedColumnIds","reduce","acc","groupSpacerColumns","groupColumns","ungroupColumns","colId","find","x","reducer","aggregateColumns","newColumns","getPivotColumns","flexes","maxWidths","minWidths","minColumnsSize","availableWidthForFlex","computedFlex","computedWidth","computedDefaultWidth","computedMinWidth","computedMaxWidth","Math","max","flexWidths","availableSize","totalFlexColumnCount","minWidth","unlockedColumns","lockedStartColumns","lockedEndColumns","visibleColumnsMap","sumPrefixWidth","totalLockedStartWidth","totalLockedEndWidth","totalUnlockedWidth","columnWidthPrefixSums","computedHasColSpan","arr","computedVisibleIndex","computedVisibleCount","colspan","computedOffset","computedEditable","pivotCol","summaryReducer","totalComputedWidth","allColumns","getPivotGroupColumnForPath","columnConfig","_ref2","pivotMap","p","summaryColumn","_columnConfig","pivotSummaryPath","lastItem","field","result","uniqueValuesRoot","parentGroups","pivotColumnPath","values","parentGroup","groupId","group","pivotPath","nextRoot","depth","summaryCol","pivotSummaryColumn","showInContextMenu","pivotColumn","pivotName","prevParentGroup"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@inovua/reactdatagrid-community/normalizeColumns/index.js"],"sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _setColumnId = _interopRequireDefault(require(\"../setColumnId\"));\nvar _computeFlexWidths = _interopRequireDefault(require(\"../utils/flex/computeFlexWidths\"));\nvar _mapColumns = _interopRequireDefault(require(\"../mapColumns\"));\nvar _defaultCheckColumnId = require(\"./defaultCheckColumnId\");\nvar _defaultRowExpandColumnId = require(\"./defaultRowExpandColumnId\");\nvar _defaultRowIndexColumnId = require(\"./defaultRowIndexColumnId\");\nvar _defaultGroupColumnId = require(\"./defaultGroupColumnId\");\nvar _defaultRowReorderColumnId = require(\"./defaultRowReorderColumnId\");\nvar _setComputedColumnWidths = _interopRequireDefault(require(\"./setComputedColumnWidths\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar DEFAULT_COLUMN_PROPS = {\n  isColumn: true,\n  keepFlex: true\n};\nvar defaultPivotGrandSummaryColumn = {\n  sortable: false,\n  draggable: false,\n  filterable: false\n};\nvar defaultPivotSummaryColumn = defaultPivotGrandSummaryColumn;\nvar emptyArray = [];\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar _default = function _default(_ref) {\n  var _ref$generatedColumns = _ref.generatedColumnsLength,\n    generatedColumnsLength = _ref$generatedColumns === void 0 ? 0 : _ref$generatedColumns,\n    columns = _ref.columns,\n    columnMinWidth = _ref.columnMinWidth,\n    columnMaxWidth = _ref.columnMaxWidth,\n    columnDefaultWidth = _ref.columnDefaultWidth,\n    columnWidth = _ref.columnWidth,\n    _ref$columnSizes = _ref.columnSizes,\n    columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,\n    _ref$columnVisibility = _ref.columnVisibilityMap,\n    columnVisibilityMap = _ref$columnVisibility === void 0 ? emptyObject : _ref$columnVisibility,\n    _ref$columnFlexes = _ref.columnFlexes,\n    columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes,\n    _ref$lockedColumnsSta = _ref.lockedColumnsState,\n    lockedColumnsState = _ref$lockedColumnsSta === void 0 ? emptyObject : _ref$lockedColumnsSta,\n    columnOrder = _ref.columnOrder,\n    computedPivotUniqueValuesPerColumn = _ref.computedPivotUniqueValuesPerColumn,\n    editable = _ref.editable,\n    pivot = _ref.pivot,\n    sortable = _ref.sortable,\n    filterable = _ref.filterable,\n    resizable = _ref.resizable,\n    pivotGrandSummaryColumn = _ref.pivotGrandSummaryColumn,\n    lockable = _ref.lockable,\n    checkboxColumn = _ref.checkboxColumn,\n    rowIndexColumn = _ref.rowIndexColumn,\n    filter = _ref.filter,\n    rtl = _ref.rtl,\n    filterValueMap = _ref.filterValueMap,\n    sortInfo = _ref.sortInfo,\n    showPivotSummaryColumns = _ref.showPivotSummaryColumns,\n    _ref$availableWidth = _ref.availableWidth,\n    availableWidth = _ref$availableWidth === void 0 ? 0 : _ref$availableWidth,\n    onRowReorder = _ref.onRowReorder,\n    rowReorderColumn = _ref.rowReorderColumn;\n  if (columnVisibilityMap) {\n    columnVisibilityMap = _objectSpread({}, columnVisibilityMap);\n  }\n  var groupColumnSummaryReducers = {};\n  var pivotColumnSummaryReducers = {};\n  var addSortInfo = function addSortInfo(col) {\n    col.computedSortable = (typeof col.sortable === 'boolean' ? col.sortable : sortable) || false;\n    col.computedSortInfo = null;\n    if (col.computedSortable && sortInfo) {\n      col.computedSortInfo = Array.isArray(sortInfo) ? sortInfo.filter(function (info) {\n        return info.name === col.id || info.id === col.id || info.name === col.sortName;\n      })[0] : sortInfo.name === col.id || sortInfo.id === col.id || sortInfo.name === col.sortName ? sortInfo : null;\n    }\n  };\n  var addFilterValue = function addFilterValue(col) {\n    col.computedFilterable = (typeof col.filterable === 'boolean' ? col.filterable : filterable) || undefined;\n    col.computedFilterValue = null;\n    if (col.computedFilterable && filterValueMap) {\n      col.computedFilterValue = filterValueMap[col.id];\n    }\n    if (col.computedFilterable === undefined && col.computedFilterValue) {\n      col.computedFilterable = true;\n    }\n    col.computedFilterable = !!col.computedFilterable;\n  };\n  var hasLockedStart = false;\n  var hasLockedEnd = false;\n  var rowExpandColumn;\n  var setComputedColumnWidthsParam = {\n    columnFlexes: columnFlexes,\n    columnSizes: columnSizes,\n    columnDefaultWidth: columnDefaultWidth,\n    columnWidth: columnWidth,\n    columnMinWidth: columnMinWidth,\n    columnMaxWidth: columnMaxWidth\n  };\n  var hasDedicatedGroupColumn = false;\n  var normalizedColumns = columns.map(function (column) {\n    return _objectSpread(_objectSpread({}, DEFAULT_COLUMN_PROPS), column);\n  }).map(_setColumnId.default).map(function (col, i) {\n    col.computedInitialIndex = i - generatedColumnsLength;\n    (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n    col.computedVisible = col.visible !== undefined ? !!col.visible : columnVisibilityMap[col.id] === false ? false : true;\n    if (col.computedVisible && pivot && !col.groupSummaryReducer && col.id !== _defaultGroupColumnId.id) {\n      col.computedVisible = false;\n    }\n    if (col.computedVisible === false) {\n      columnVisibilityMap[col.id] = false;\n    } else {\n      delete columnVisibilityMap[col.id];\n      if (col.id === _defaultGroupColumnId.id) {\n        hasDedicatedGroupColumn = true;\n      }\n    }\n    col.computedHeader = col.header === undefined ? col.name || '' : col.header;\n    col.computedLocked = col.locked;\n    if (col.computedLocked === undefined && lockedColumnsState[col.id] !== undefined) {\n      col.computedLocked = lockedColumnsState[col.id];\n    }\n    if (col.computedLocked === undefined && col.defaultLocked !== undefined) {\n      col.computedLocked = col.defaultLocked;\n    }\n    if (!filter || filter(col)) {\n      if (col.computedLocked === true || col.computedLocked === 'start') {\n        col.computedLocked = 'start';\n        hasLockedStart = true;\n      }\n      if (col.computedLocked === 'end') {\n        hasLockedEnd = true;\n      }\n    }\n    col.computedLocked = col.computedLocked || false;\n    if (col.id === _defaultRowExpandColumnId.id) {\n      rowExpandColumn = col;\n    }\n    if (col.enableColumnHover != null) {\n      col.computedEnableColumnHover = col.enableColumnHover;\n      delete col.enableColumnHover;\n    }\n    return col;\n  });\n  if (hasLockedStart) {\n    if (rowExpandColumn != null) {\n      rowExpandColumn.computedLocked = 'start';\n    }\n    if (checkboxColumn) {\n      var normalizedCheckboxColumn = normalizedColumns.filter(function (c) {\n        return c.checkboxColumn && c.id == _defaultCheckColumnId.id;\n      })[0];\n      if (normalizedCheckboxColumn) {\n        normalizedCheckboxColumn.computedLocked = 'start';\n      }\n    }\n    if (hasDedicatedGroupColumn) {\n      var normalizedGroupColumn = normalizedColumns.filter(function (c) {\n        return c.groupColumn && c.id == _defaultGroupColumnId.id;\n      })[0];\n      if (normalizedGroupColumn) {\n        normalizedGroupColumn.computedLocked = 'start';\n      }\n    }\n    var autoLockColumns = normalizedColumns.filter(function (c) {\n      return !!c.autoLock;\n    });\n    if (autoLockColumns.length) {\n      autoLockColumns.forEach(function (c) {\n        c.computedLocked = 'start';\n      });\n    }\n    if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n      var normalizedRowReorderColumn = normalizedColumns.filter(function (c) {\n        return c.id === _defaultRowReorderColumnId.id;\n      })[0];\n      if (normalizedRowReorderColumn) {\n        normalizedRowReorderColumn.computedLocked = 'start';\n      }\n    }\n  }\n  var computedEnableRowspan = false;\n  normalizedColumns.forEach(function (col, index) {\n    col.computedAbsoluteIndex = index;\n    addSortInfo(col);\n    addFilterValue(col);\n    if (typeof col.rowspan === 'function') {\n      computedEnableRowspan = true;\n    }\n    col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n    col.computedLockable = (typeof col.lockable !== 'boolean' ? lockable : col.lockable) || false;\n  });\n  var columnsMap = (0, _mapColumns.default)(normalizedColumns, {\n    showWarnings: true\n  });\n  var visibleColumns = normalizedColumns.filter(function (c) {\n    return c.computedVisible !== false;\n  });\n  if (columnOrder) {\n    if (checkboxColumn) {\n      var checkboxColumnIndex = columnOrder.indexOf(_defaultCheckColumnId.id);\n      if (checkboxColumnIndex == -1) {\n        columnOrder = [_defaultCheckColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder));\n      }\n    }\n  }\n  if (rowExpandColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowExpandColumnIndex = columnOrder.indexOf(_defaultRowExpandColumnId.id);\n    if (rowExpandColumnIndex !== 0) {\n      columnOrder = [_defaultRowExpandColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id != _defaultRowExpandColumnId.id;\n      })));\n    }\n  }\n  if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowReorderColumnIndex = columnOrder.indexOf(_defaultRowReorderColumnId.id);\n    if (rowReorderColumnIndex !== 0) {\n      columnOrder = [_defaultRowReorderColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id !== _defaultRowReorderColumnId.id;\n      })));\n    }\n  }\n  if (rowIndexColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var rowIndexColumnIndex = columnOrder.indexOf(_defaultRowIndexColumnId.id);\n    if (rowIndexColumnIndex != 0) {\n      columnOrder = [].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        return col && col.groupSpacerColumn;\n      })), [_defaultRowIndexColumnId.id], (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        if (!col) {\n          return false;\n        }\n        return id != _defaultRowIndexColumnId.id && !col.groupSpacerColumn;\n      })));\n    }\n  }\n  if (generatedColumnsLength) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n    var generatedColumns = visibleColumns.filter(function (c) {\n      return c.groupSpacerColumn;\n    });\n    var generatedColumnIds = generatedColumns.reduce(function (acc, col) {\n      acc[col.id] = true;\n      return acc;\n    }, {});\n    columnOrder = [].concat((0, _toConsumableArray2.default)(generatedColumns.map(function (c) {\n      return c.id;\n    })), (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n      return !generatedColumnIds[id];\n    })));\n  }\n  if (columnOrder) {\n    var groupSpacerColumns = visibleColumns.filter(function (col) {\n      return col.groupSpacerColumn;\n    });\n    var groupColumns = visibleColumns.filter(function (col) {\n      return col.groupColumn && !col.groupSpacerColumn;\n    });\n    var ungroupColumns = visibleColumns.filter(function (col) {\n      return !col.groupColumn && !col.groupSpacerColumn;\n    });\n    visibleColumns = columnOrder.map(function (colId) {\n      return ungroupColumns.find(function (col) {\n        return col.id == colId;\n      });\n    }).filter(function (x) {\n      return !!x;\n    });\n    visibleColumns = [].concat((0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));\n  }\n  if (typeof filter == 'function') {\n    visibleColumns = visibleColumns.filter(filter);\n  }\n  normalizedColumns.forEach(function (col) {\n    if (col.groupSummaryReducer) {\n      groupColumnSummaryReducers[col.id] = col.groupSummaryReducer;\n      if (!col.groupSummaryReducer.reducer && col.groupSummaryReducer.reduce) {\n        groupColumnSummaryReducers[col.id].reducer = col.groupSummaryReducer.reduce;\n      }\n    }\n  });\n  var groupColumn = visibleColumns.filter(function (col) {\n    return !!col.groupColumn;\n  })[0];\n  if (pivot && computedPivotUniqueValuesPerColumn && groupColumn) {\n    var aggregateColumns = visibleColumns.filter(function (col) {\n      return !!col.groupSummaryReducer;\n    });\n    var newColumns = [groupColumn].concat((0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, computedPivotUniqueValuesPerColumn, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns))).map(function (col) {\n      (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n      col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n      return col;\n    });\n    visibleColumns = newColumns;\n    columnsMap = _objectSpread(_objectSpread({}, columnsMap), (0, _mapColumns.default)(newColumns, {\n      showWarnings: true\n    }));\n  }\n  var flexes = [];\n  var maxWidths = [];\n  var minWidths = [];\n  var minColumnsSize = 0;\n  var availableWidthForFlex = availableWidth;\n  visibleColumns.forEach(function (col) {\n    if (col.computedFlex == null) {\n      availableWidthForFlex -= col.computedWidth || col.computedDefaultWidth || col.computedMinWidth || 0;\n    }\n    flexes.push(col.computedFlex || 0);\n    maxWidths.push(col.computedMaxWidth || null);\n    minWidths.push(col.computedMinWidth || null);\n  });\n  availableWidthForFlex = Math.max(availableWidthForFlex, 0);\n  var flexWidths = (0, _computeFlexWidths.default)({\n    flexes: flexes,\n    availableSize: availableWidthForFlex,\n    maxWidths: maxWidths,\n    minWidths: minWidths\n  });\n  var totalFlexColumnCount = 0;\n  visibleColumns.forEach(function (col, index) {\n    if (col.computedFlex != null) {\n      col.computedWidth = flexWidths[index] || 0;\n      totalFlexColumnCount++;\n      minColumnsSize += col.minWidth || 0;\n    } else {\n      minColumnsSize += col.computedWidth || 0;\n    }\n  });\n  var unlockedColumns = visibleColumns;\n  var lockedStartColumns = [];\n  var lockedEndColumns = [];\n  if (hasLockedStart || hasLockedEnd) {\n    unlockedColumns = groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return !col.computedLocked && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return !col.computedLocked;\n    });\n    lockedStartColumns = hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'start' || col.groupColumn;\n    }) : emptyArray;\n    lockedEndColumns = hasLockedEnd ? groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end' && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end';\n    }) : emptyArray;\n    visibleColumns = [].concat((0, _toConsumableArray2.default)(lockedStartColumns), (0, _toConsumableArray2.default)(unlockedColumns), (0, _toConsumableArray2.default)(lockedEndColumns));\n  }\n  var visibleColumnsMap = (0, _mapColumns.default)(visibleColumns, {\n    showWarnings: true\n  });\n  var sumPrefixWidth = 0;\n  var totalLockedStartWidth = 0;\n  var totalLockedEndWidth = 0;\n  var totalUnlockedWidth = 0;\n  var columnWidthPrefixSums = [];\n  var computedHasColSpan = false;\n  visibleColumns.forEach(function (col, index, arr) {\n    col.computedVisibleIndex = index;\n    col.computedVisibleCount = arr.length;\n    if (col.colspan) {\n      computedHasColSpan = true;\n    }\n    col.computedOffset = sumPrefixWidth;\n    var computedLocked = col.computedLocked,\n      computedWidth = col.computedWidth;\n    if (computedLocked === 'start') {\n      totalLockedStartWidth += computedWidth || 0;\n    } else if (computedLocked === 'end') {\n      totalLockedEndWidth += computedWidth || 0;\n    } else {\n      totalUnlockedWidth += computedWidth || 0;\n    }\n    addSortInfo(col);\n    if (editable && col.editable === undefined) {\n      col.computedEditable = true;\n    }\n    if (col.editable !== undefined) {\n      col.computedEditable = col.editable;\n    }\n    columnWidthPrefixSums.push(col.computedOffset || 0);\n    sumPrefixWidth += computedWidth || 0;\n  });\n  if (pivot) {\n    pivot.forEach(function (pivotCol) {\n      if (typeof pivotCol !== 'string' && pivotCol.summaryReducer) {\n        pivotColumnSummaryReducers[pivotCol.name] = pivotCol.summaryReducer;\n      }\n    });\n  }\n  return {\n    pivotColumnSummaryReducers: pivotColumnSummaryReducers,\n    minColumnsSize: minColumnsSize,\n    totalFlexColumnCount: totalFlexColumnCount,\n    groupColumnSummaryReducers: Object.keys(groupColumnSummaryReducers).length ? groupColumnSummaryReducers : undefined,\n    totalComputedWidth: sumPrefixWidth,\n    totalLockedStartWidth: totalLockedStartWidth,\n    totalLockedEndWidth: totalLockedEndWidth,\n    totalUnlockedWidth: totalUnlockedWidth,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    unlockedColumns: unlockedColumns,\n    columnWidthPrefixSums: columnWidthPrefixSums,\n    columnVisibilityMap: columnVisibilityMap,\n    computedEnableRowspan: computedEnableRowspan,\n    computedHasColSpan: computedHasColSpan,\n    visibleColumns: visibleColumns,\n    allColumns: normalizedColumns,\n    columnsMap: columnsMap,\n    visibleColumnsMap: visibleColumnsMap\n  };\n};\nexports.default = _default;\nvar getPivotGroupColumnForPath = function getPivotGroupColumnForPath(columnConfig, _ref2) {\n  var pivot = _ref2.pivot,\n    pivotGrandSummaryColumn = _ref2.pivotGrandSummaryColumn;\n  var pivotMap = pivot.reduce(function (acc, p) {\n    if (!p.summaryReducer) {\n      return acc;\n    }\n    var col = p ? p.summaryColumn || {} : {};\n    acc[p.name || p] = col;\n    return acc;\n  }, {});\n  if (pivotGrandSummaryColumn === true) {\n    pivotGrandSummaryColumn = {};\n  }\n  if (pivotGrandSummaryColumn) {\n    pivotGrandSummaryColumn.pivotGrandSummaryColumn = true;\n    pivotGrandSummaryColumn = _objectSpread(_objectSpread({}, defaultPivotGrandSummaryColumn), pivotGrandSummaryColumn);\n  }\n  columnConfig = _objectSpread(_objectSpread({}, defaultPivotSummaryColumn), columnConfig);\n  var _columnConfig = columnConfig,\n    pivotSummaryPath = _columnConfig.pivotSummaryPath;\n  var lastItem = pivotSummaryPath[pivotSummaryPath.length - 1];\n  var name = lastItem ? lastItem.field : null;\n  var col = !lastItem ? pivotGrandSummaryColumn : pivotMap[name] || {};\n  var result = columnConfig;\n  if (lastItem) {\n    columnConfig.header = \"Summary for \".concat(lastItem.field, \" \").concat(lastItem.value);\n  }\n  if (!pivotGrandSummaryColumn && !pivotMap[name]) {\n    return null;\n  }\n  if (col) {\n    if (typeof col === 'function') {\n      result = _objectSpread(_objectSpread({}, columnConfig), col(columnConfig));\n    } else {\n      result = _objectSpread(_objectSpread({}, columnConfig), col);\n    }\n  }\n  return result;\n};\nvar getPivotColumns = function getPivotColumns(aggregateColumns, uniqueValuesRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns) {\n  var parentGroups = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var pivotColumnPath = arguments.length > 7 ? arguments[7] : undefined;\n  var newColumns = [];\n  var field = uniqueValuesRoot.field,\n    values = uniqueValuesRoot.values;\n  var parentGroup = parentGroups[parentGroups.length - 1];\n  if (field && values) {\n    Object.keys(values).forEach(function (value) {\n      var groupId = \"\".concat(parentGroup ? parentGroup.name + '_' : '').concat(field, \":\").concat(value);\n      var group = {\n        name: groupId,\n        header: \"\".concat(field, \"-\").concat(value),\n        pivotPath: [{\n          value: value,\n          field: field\n        }]\n      };\n      if (parentGroup) {\n        group.group = parentGroup.name;\n        group.pivotPath = [].concat((0, _toConsumableArray2.default)(parentGroup.pivotPath || []), (0, _toConsumableArray2.default)(group.pivotPath));\n      }\n      var nextRoot = values[value];\n      pivotColumnPath = pivotColumnPath || [];\n      newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, nextRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns, [].concat((0, _toConsumableArray2.default)(parentGroups), [{\n        name: groupId,\n        pivotPath: group.pivotPath,\n        depth: parentGroup ? parentGroup.depth + 1 : 0\n      }]), [].concat((0, _toConsumableArray2.default)(pivotColumnPath), [value]))));\n      if (!parentGroup && showPivotSummaryColumns) {\n        var summaryCol = getPivotGroupColumnForPath({\n          header: \"Summary for \".concat(group.header),\n          id: \"__summary_\".concat(group.name),\n          pivotSummaryColumn: true,\n          pivotSummaryPath: group.pivotPath\n        }, {\n          pivot: pivot\n        });\n        if (summaryCol) {\n          newColumns.push(summaryCol);\n        }\n      }\n    });\n  } else {\n    newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(aggregateColumns.map(function (col) {\n      var result = _objectSpread(_objectSpread({}, col), {}, {\n        sortable: false,\n        showInContextMenu: false,\n        draggable: false,\n        pivotColumn: true,\n        pivotColumnPath: [].concat((0, _toConsumableArray2.default)(pivotColumnPath || []), [col.pivotName || col.name || col.id]),\n        id: \"\".concat(parentGroup.name, \"-\").concat(col.id),\n        group: parentGroup.name\n      });\n      if (columnSizes[result.id]) {\n        result.computedWidth = columnSizes[result.id];\n      }\n      return result;\n    })));\n    var prevParentGroup = parentGroups[parentGroups.length - 2];\n    if (showPivotSummaryColumns && prevParentGroup) {\n      var summaryCol = getPivotGroupColumnForPath({\n        group: prevParentGroup ? prevParentGroup.name : undefined,\n        header: \"Summary for \".concat(parentGroup.name, \" - \").concat(prevParentGroup ? prevParentGroup.name : ''),\n        id: \"__summary__\".concat(parentGroup.name),\n        pivotSummaryPath: parentGroup.pivotPath,\n        pivotSummaryColumn: true\n      }, {\n        pivot: pivot\n      });\n      if (summaryCol) {\n        newColumns.push(summaryCol);\n      }\n    }\n  }\n  if (!parentGroup && pivotGrandSummaryColumn && showPivotSummaryColumns) {\n    newColumns.push(getPivotGroupColumnForPath({\n      header: \"Grand summary\",\n      id: \"__summary__grand\",\n      pivotSummaryColumn: true,\n      pivotSummaryPath: []\n    }, {\n      pivot: pivot,\n      pivotGrandSummaryColumn: pivotGrandSummaryColumn\n    }));\n  }\n  return newColumns;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}