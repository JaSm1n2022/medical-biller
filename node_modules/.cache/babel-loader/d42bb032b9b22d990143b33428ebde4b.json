{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError } from './types';\nexport var FunctionsClient = /*#__PURE__*/function () {\n  function FunctionsClient(url) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      customFetch = _ref.customFetch;\n    _classCallCheck(this, FunctionsClient);\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(customFetch);\n  }\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  _createClass(FunctionsClient, [{\n    key: \"setAuth\",\n    value: function setAuth(token) {\n      this.headers.Authorization = \"Bearer \".concat(token);\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n  }, {\n    key: \"invoke\",\n    value: function invoke(functionName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var headers, method, functionArgs, _headers, body, response, isRelayError, responseType, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              headers = options.headers, method = options.method, functionArgs = options.body;\n              _headers = {};\n              if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type') || !headers)) {\n                if (typeof Blob !== 'undefined' && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n                  // will work for File as File inherits Blob\n                  // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                  _headers['Content-Type'] = 'application/octet-stream';\n                  body = functionArgs;\n                } else if (typeof functionArgs === 'string') {\n                  // plain string\n                  _headers['Content-Type'] = 'text/plain';\n                  body = functionArgs;\n                } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                  // don't set content-type headers\n                  // Request will automatically add the right boundary value\n                  body = functionArgs;\n                } else {\n                  // default, assume this is JSON\n                  _headers['Content-Type'] = 'application/json';\n                  body = JSON.stringify(functionArgs);\n                }\n              }\n              _context.next = 6;\n              return this.fetch(\"\".concat(this.url, \"/\").concat(functionName), {\n                method: method || 'POST',\n                // headers priority is (high to low):\n                // 1. invoke-level headers\n                // 2. client-level headers\n                // 3. default Content-Type header\n                headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                body: body\n              })[\"catch\"](function (fetchError) {\n                throw new FunctionsFetchError(fetchError);\n              });\n            case 6:\n              response = _context.sent;\n              isRelayError = response.headers.get('x-relay-error');\n              if (!(isRelayError && isRelayError === 'true')) {\n                _context.next = 10;\n                break;\n              }\n              throw new FunctionsRelayError(response);\n            case 10:\n              if (response.ok) {\n                _context.next = 12;\n                break;\n              }\n              throw new FunctionsHttpError(response);\n            case 12:\n              responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n              if (!(responseType === 'application/json')) {\n                _context.next = 19;\n                break;\n              }\n              _context.next = 16;\n              return response.json();\n            case 16:\n              data = _context.sent;\n              _context.next = 34;\n              break;\n            case 19:\n              if (!(responseType === 'application/octet-stream')) {\n                _context.next = 25;\n                break;\n              }\n              _context.next = 22;\n              return response.blob();\n            case 22:\n              data = _context.sent;\n              _context.next = 34;\n              break;\n            case 25:\n              if (!(responseType === 'multipart/form-data')) {\n                _context.next = 31;\n                break;\n              }\n              _context.next = 28;\n              return response.formData();\n            case 28:\n              data = _context.sent;\n              _context.next = 34;\n              break;\n            case 31:\n              _context.next = 33;\n              return response.text();\n            case 33:\n              data = _context.sent;\n            case 34:\n              return _context.abrupt(\"return\", {\n                data: data,\n                error: null\n              });\n            case 37:\n              _context.prev = 37;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                data: null,\n                error: _context.t0\n              });\n            case 40:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 37]]);\n      }));\n    }\n  }]);\n  return FunctionsClient;\n}();","map":{"version":3,"sources":["../../src/FunctionsClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map"]},"metadata":{},"sourceType":"module"}