{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(authSagaWatcher);\nimport { takeEvery } from \"redux-saga/effects\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { logoutSaga, checkAuthTimeoutSaga, authUserSaga, authCheckStateSaga } from \"./auth\";\nfunction authSagaWatcher() {\n  return _regeneratorRuntime().wrap(function authSagaWatcher$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga);\n      case 2:\n        _context.next = 4;\n        return takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, logoutSaga);\n      case 4:\n        _context.next = 6;\n        return takeEvery(actionTypes.AUTH_USER, authUserSaga);\n      case 6:\n        _context.next = 8;\n        return takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga);\n      case 8:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}\nexport default authSagaWatcher;","map":{"version":3,"names":["authSagaWatcher","takeEvery","actionTypes","logoutSaga","checkAuthTimeoutSaga","authUserSaga","authCheckStateSaga","_regeneratorRuntime","wrap","authSagaWatcher$","_context","prev","next","AUTH_CHECK_TIMEOUT","AUTH_INITIATE_LOGOUT","AUTH_USER","AUTH_CHECK_STATE","stop","_marked"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/src/store/sagas/authSaga.js"],"sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport {\n  logoutSaga,\n  checkAuthTimeoutSaga,\n  authUserSaga,\n  authCheckStateSaga,\n} from \"./auth\";\n\nfunction* authSagaWatcher<T>(): Iterable<T> {\n  yield takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga);\n  yield takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, logoutSaga);\n  yield takeEvery(actionTypes.AUTH_USER, authUserSaga);\n  yield takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga);\n}\n\nexport default authSagaWatcher;\n"],"mappings":";sDASUA,eAAe;AATzB,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAO,KAAKC,WAAW,MAAM,wBAAwB;AACrD,SACEC,UAAU,EACVC,oBAAoB,EACpBC,YAAY,EACZC,kBAAkB,QACb,QAAQ;AAEf,SAAUN,eAAeA,CAAA;EAAA,OAAAO,mBAAA,GAAAC,IAAA,UAAAC,iBAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAAF,QAAA,CAAAE,IAAA;QACvB,OAAMX,SAAS,CAACC,WAAW,CAACW,kBAAkB,EAAET,oBAAoB,CAAC;MAAA;QAAAM,QAAA,CAAAE,IAAA;QACrE,OAAMX,SAAS,CAACC,WAAW,CAACY,oBAAoB,EAAEX,UAAU,CAAC;MAAA;QAAAO,QAAA,CAAAE,IAAA;QAC7D,OAAMX,SAAS,CAACC,WAAW,CAACa,SAAS,EAAEV,YAAY,CAAC;MAAA;QAAAK,QAAA,CAAAE,IAAA;QACpD,OAAMX,SAAS,CAACC,WAAW,CAACc,gBAAgB,EAAEV,kBAAkB,CAAC;MAAA;MAAA;QAAA,OAAAI,QAAA,CAAAO,IAAA;IAAA;EAAA,GAAAC,OAAA;AAAA;AAGnE,eAAelB,eAAe"},"metadata":{},"sourceType":"module"}