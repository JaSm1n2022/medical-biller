{"ast":null,"code":"import _objectSpread from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/nargelmac/Documents/GitHub/medical-biller/src/components/Table/HospiceTable.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\nimport \"@inovua/reactdatagrid-community/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar isWithCheckItem = false;\nvar HospiceTable = function HospiceTable(props) {\n  _s();\n  var main = props.main;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    columns = _useState2[0],\n    setColumns = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dataSource = _useState4[0],\n    setDataSource = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selected = _useState8[0],\n    setSelected = _useState8[1];\n  useEffect(function () {\n    setColumns(props.columns);\n    setDataSource(props.dataSource);\n    isWithCheckItem = props.dataSource.find(function (d) {\n      return d.isChecked;\n    });\n    if (!isWithCheckItem) {\n      setSelected({});\n    }\n  }, [props]);\n  useEffect(function () {\n    setLoading(props.loading);\n    // setReservedViewportWidth(null)\n  }, [props.loading]);\n  var onCellClick = useCallback(function (event, cellProps) {\n    event.stopPropagation();\n  });\n  var onRowClick = useCallback(function (rowProps, event) {\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  var onSelectionChange = useCallback(function (_ref) {\n    var selectedMap = _ref.selected,\n      data = _ref.data;\n    console.log(\"[onSelectChange]\", data, selectedMap);\n    if (JSON.stringify(selectedMap) === \"{}\") {\n      // no selected\n      props.onCheckboxSelectionHandler([], false, false);\n    } else if (data && Array.isArray(data) && data.length >= 1) {\n      // is Mark as All\n\n      setSelected(selectedMap);\n      props.onCheckboxSelectionHandler(data, true, true);\n    } else {\n      // there is selection\n      setSelected(selectedMap);\n      // find to distinguish if true or false\n      console.log(\"[Object.keys(selectedMap)]\", Object.keys(selectedMap));\n      if (selectedMap && Array.isArray(Object.keys(selectedMap)) && Object.keys(selectedMap).length === 0) {\n        props.onCheckboxSelectionHandler([data.id], false, false);\n      } else {\n        var isChecked = Object.keys(selectedMap).find(function (m) {\n          return m.toString() === data.id.toString();\n        });\n        props.onCheckboxSelectionHandler([data.id], false, isChecked || false);\n      }\n    }\n  });\n  var renderPaginationToolbar = useCallback(function (paginationProps) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 50,\n        paddingLeft: 8,\n        paddingTop: 8,\n        paddingBottom: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"renderPaginationToolbar\", _objectSpread(_objectSpread({}, paginationProps), {}, {\n        bordered: false\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this);\n  }, []);\n\n  // use to save it in storage and\n\n  return /*#__PURE__*/_jsxDEV(ReactDataGrid, {\n    idProperty: \"id\",\n    columns: columns,\n    dataSource: dataSource,\n    style: {\n      height: props.height || 500\n    },\n    editable: false,\n    showColumnMenuTool: false,\n    checkboxOnlyRowSelect: main,\n    activateRowOnFocus: true,\n    checkboxColumn: main,\n    defaultLimit: 100,\n    loading: loading,\n    selected: selected,\n    onSelectionChange: onSelectionChange\n    // renderPaginationToolbar={renderPaginationToolbar}\n    // onColumnVisibleChange={props.onColumnVisibleChangeHandler}\n    ,\n    onRowClick: onRowClick,\n    onCellClick: onCellClick,\n    pagination: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n_s(HospiceTable, \"7GE9IxnUJwldgYVfmFon+OQmDeI=\");\n_c = HospiceTable;\nexport default HospiceTable;\nvar _c;\n$RefreshReg$(_c, \"HospiceTable\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","ReactDataGrid","jsxDEV","_jsxDEV","isWithCheckItem","HospiceTable","props","_s","main","_useState","_useState2","_slicedToArray","columns","setColumns","_useState3","_useState4","dataSource","setDataSource","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selected","setSelected","find","d","isChecked","onCellClick","event","cellProps","stopPropagation","onRowClick","rowProps","preventDefault","onSelectionChange","_ref","selectedMap","data","console","log","JSON","stringify","onCheckboxSelectionHandler","Array","isArray","length","Object","keys","id","m","toString","renderPaginationToolbar","paginationProps","style","height","paddingLeft","paddingTop","paddingBottom","children","_objectSpread","bordered","fileName","_jsxFileName","lineNumber","columnNumber","_this","idProperty","editable","showColumnMenuTool","checkboxOnlyRowSelect","activateRowOnFocus","checkboxColumn","defaultLimit","pagination","_c","$RefreshReg$"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/src/components/Table/HospiceTable.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\nimport \"@inovua/reactdatagrid-community/index.css\";\n\nlet isWithCheckItem = false;\n\nconst HospiceTable = (props) => {\n  const { main } = props;\n  const [columns, setColumns] = useState([]);\n  const [dataSource, setDataSource] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState({});\n  useEffect(() => {\n    setColumns(props.columns);\n    setDataSource(props.dataSource);\n    isWithCheckItem = props.dataSource.find((d) => d.isChecked);\n    if (!isWithCheckItem) {\n      setSelected({});\n    }\n  }, [props]);\n\n  useEffect(() => {\n    setLoading(props.loading);\n    // setReservedViewportWidth(null)\n  }, [props.loading]);\n\n  const onCellClick = useCallback((event, cellProps) => {\n    event.stopPropagation();\n  });\n  const onRowClick = useCallback((rowProps, event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  const onSelectionChange = useCallback(({ selected: selectedMap, data }) => {\n    console.log(\"[onSelectChange]\", data, selectedMap);\n    if (JSON.stringify(selectedMap) === \"{}\") {\n      // no selected\n      props.onCheckboxSelectionHandler([], false, false);\n    } else if (data && Array.isArray(data) && data.length >= 1) {\n      // is Mark as All\n\n      setSelected(selectedMap);\n      props.onCheckboxSelectionHandler(data, true, true);\n    } else {\n      // there is selection\n      setSelected(selectedMap);\n      // find to distinguish if true or false\n      console.log(\"[Object.keys(selectedMap)]\", Object.keys(selectedMap));\n      if (\n        selectedMap &&\n        Array.isArray(Object.keys(selectedMap)) &&\n        Object.keys(selectedMap).length === 0\n      ) {\n        props.onCheckboxSelectionHandler([data.id], false, false);\n      } else {\n        const isChecked = Object.keys(selectedMap).find(\n          (m) => m.toString() === data.id.toString()\n        );\n        props.onCheckboxSelectionHandler([data.id], false, isChecked || false);\n      }\n    }\n  });\n  const renderPaginationToolbar = useCallback((paginationProps) => {\n    return (\n      <div\n        style={{ height: 50, paddingLeft: 8, paddingTop: 8, paddingBottom: 8 }}\n      >\n        <renderPaginationToolbar {...paginationProps} bordered={false} />\n        <div></div>\n      </div>\n    );\n  }, []);\n\n  // use to save it in storage and\n\n  return (\n    <ReactDataGrid\n      idProperty=\"id\"\n      columns={columns}\n      dataSource={dataSource}\n      style={{ height: props.height || 500 }}\n      editable={false}\n      showColumnMenuTool={false}\n      checkboxOnlyRowSelect={main}\n      activateRowOnFocus={true}\n      checkboxColumn={main}\n      defaultLimit={100}\n      loading={loading}\n      selected={selected}\n      onSelectionChange={onSelectionChange}\n      // renderPaginationToolbar={renderPaginationToolbar}\n      // onColumnVisibleChange={props.onColumnVisibleChangeHandler}\n      onRowClick={onRowClick}\n      onCellClick={onCellClick}\n      pagination\n    />\n  );\n};\n\nexport default HospiceTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}