{"ast":null,"code":"var _jsxFileName = \"/Users/nargelmac/Documents/GitHub/medical-biller/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\nimport { rootSaga } from \"./store/sagas/rootSaga\";\nimport reducers from \"./store/reducers\";\n// import { createRoot } from 'react-dom/client';\n\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar composeEnhancers = (process.env.NODE_ENV === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\nvar sagaMiddleware = createSagaMiddleware();\nvar store = createStore(reducers, composeEnhancers(applyMiddleware(sagaMiddleware, logger)));\nsagaMiddleware.run(rootSaga);\nvar IntlContext = /*#__PURE__*/React.createContext();\nvar app = /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(IntlContext.Provider, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this);\n\n// const container =  (app,document.getElementById('root'));\n// const root = createRoot(container);\n// root.render(root)\n\nvar root = document.getElementById(\"root\");\nif (root) {\n  // Set up the browser history with the updated location (minus the # sign)\n  var path = (/#!(\\/.*)$/.exec(window.location.hash) || [])[1];\n  if (path) {\n    // window.location.replace(path);\n  }\n  ReactDOM.render(app, root);\n  registerServiceWorker();\n}","map":{"version":3,"names":["React","ReactDOM","createStore","applyMiddleware","compose","Provider","BrowserRouter","createSagaMiddleware","logger","rootSaga","reducers","registerServiceWorker","App","jsxDEV","_jsxDEV","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","store","run","IntlContext","createContext","app","children","fileName","_jsxFileName","lineNumber","columnNumber","root","document","getElementById","path","exec","location","hash","render"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport logger from \"redux-logger\";\nimport { rootSaga } from \"./store/sagas/rootSaga\";\nimport reducers from \"./store/reducers\";\n// import { createRoot } from 'react-dom/client';\n\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport App from \"./App\";\n\nconst composeEnhancers =\n  (process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null) || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(sagaMiddleware, logger))\n);\n\nsagaMiddleware.run(rootSaga);\n\nconst IntlContext = React.createContext();\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <IntlContext.Provider>\n        <App />\n      </IntlContext.Provider>\n    </BrowserRouter>\n  </Provider>\n);\n\n// const container =  (app,document.getElementById('root'));\n// const root = createRoot(container);\n// root.render(root)\n\nconst root = document.getElementById(\"root\");\nif (root) {\n  // Set up the browser history with the updated location (minus the # sign)\n  const path = (/#!(\\/.*)$/.exec(window.location.hash) || [])[1];\n  if (path) {\n    // window.location.replace(path);\n  }\n\n  ReactDOM.render(app, root);\n  registerServiceWorker();\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;;AAEA,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,IAAMC,gBAAgB,GACpB,CAACC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,GACnCC,MAAM,CAACC,oCAAoC,GAC3C,IAAI,KAAKhB,OAAO;AAEtB,IAAMiB,cAAc,GAAGd,oBAAoB,CAAC,CAAC;AAE7C,IAAMe,KAAK,GAAGpB,WAAW,CACvBQ,QAAQ,EACRK,gBAAgB,CAACZ,eAAe,CAACkB,cAAc,EAAEb,MAAM,CAAC,CAC1D,CAAC;AAEDa,cAAc,CAACE,GAAG,CAACd,QAAQ,CAAC;AAE5B,IAAMe,WAAW,gBAAGxB,KAAK,CAACyB,aAAa,CAAC,CAAC;AACzC,IAAMC,GAAG,gBACPZ,OAAA,CAACT,QAAQ;EAACiB,KAAK,EAAEA,KAAM;EAAAK,QAAA,eACrBb,OAAA,CAACR,aAAa;IAAAqB,QAAA,eACZb,OAAA,CAACU,WAAW,CAACnB,QAAQ;MAAAsB,QAAA,eACnBb,OAAA,CAACF,GAAG;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACR,CACX;;AAED;AACA;AACA;;AAEA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AAC5C,IAAIF,IAAI,EAAE;EACR;EACA,IAAMG,IAAI,GAAG,CAAC,WAAW,CAACC,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAACC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EAC9D,IAAIH,IAAI,EAAE;IACR;EAAA;EAGFlC,QAAQ,CAACsC,MAAM,CAACb,GAAG,EAAEM,IAAI,CAAC;EAC1BrB,qBAAqB,CAAC,CAAC;AACzB"},"metadata":{},"sourceType":"module"}