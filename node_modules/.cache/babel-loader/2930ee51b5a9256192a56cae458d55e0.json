{"ast":null,"code":"import _objectSpread from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/nargelmac/Documents/GitHub/medical-biller/src/components/AutoComplete/CustomSingleAutoComplete.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Tooltip } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    inputRoot: {\n      margin: \"0\",\n      height: function height(props) {\n        return props.height || \"40px\";\n      },\n      width: \"100%\",\n      background: function background(props) {\n        return props.disabled ? \"#e9ecef\" : \"white\";\n      },\n      \"&&& input\": {\n        fontSize: \"10pt\",\n        border: \"none\",\n        paddingTop: 2\n      }\n    },\n    textFieldInput: {\n      marginTop: theme.spacing(0)\n    }\n  };\n});\n/** *\n * Author\n * Nargel Velasco - Tech Team\n * @param {String} value - Component target value\n * @param {Array} searchList - The dropdown items.\n * @param {function} onSelectHandler - Component event function\n *\n * chipProps is always hidden to true\n */\nexport default function CustomSingleAutoComplete(props) {\n  _s();\n  var _this = this;\n  var tooltiptext = props.tooltiptext,\n    tooltipPlacement = props.tooltipPlacement,\n    value = props.value,\n    options = props.options,\n    name = props.name,\n    onSelectHandler = props.onSelectHandler,\n    onChangeHandler = props.onChangeHandler,\n    isError = props.isError,\n    errorMsg = props.errorMsg,\n    source = props.source,\n    disabled = props.disabled,\n    placeholder = props.placeholder;\n  console.log(\"[Options]\", options);\n  var classes = useStyles(props);\n  var body = /*#__PURE__*/_jsxDEV(Autocomplete, {\n    classes: classes,\n    ChipProps: {\n      hidden: true\n    },\n    id: \"checkboxes-auto-custom\",\n    options: options || [],\n    value: value,\n    disabled: disabled || false,\n    onChange: function onChange(e, item) {\n      if (item && item.value) {\n        onSelectHandler(item, source);\n      }\n    },\n    onInputChange: function onInputChange(event, newInputValue) {\n      if (!newInputValue) {\n        onChangeHandler({\n          target: {\n            name: name,\n            value: newInputValue\n          }\n        }, source);\n      }\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.label;\n    },\n    renderOption: function renderOption(option, state) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"wrap\",\n        spacing: 2,\n        style: {\n          borderTop: \"1px solid grey\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          zeroMinWidth: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            wrap: true,\n            children: option.label || option.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, _this);\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n        error: isError || false,\n        helperText: isError ? /*#__PURE__*/_jsxDEV(\"label\", {\n          hmtlFor: \"\",\n          style: {\n            fontSize: \"10pt\"\n          },\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, _this) : \"\",\n        name: name,\n        variant: \"outlined\",\n        margin: \"dense\",\n        fullWidth: true,\n        type: \"text\",\n        placeholder: placeholder || \"Select\",\n        label: placeholder || undefined,\n        className: classes.textFieldInput,\n        style: {\n          border: \"none !important\"\n        },\n        onKeyPress: function onKeyPress(ev) {\n          if (ev.key === \"Enter\") {\n            // Do code here\n            ev.preventDefault();\n          }\n        },\n        InputLabelProps: {\n          style: {\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            width: \"100%\",\n            fontSize: \"10pt\",\n            color: \"black\"\n          }\n        }\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: tooltiptext ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: tooltipPlacement || \"bottom-start\",\n      title: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontSize: \"12px\",\n          paddingTop: \"3px\"\n        },\n        children: tooltiptext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this),\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: body\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomSingleAutoComplete, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = CustomSingleAutoComplete;\nvar _c;\n$RefreshReg$(_c, \"CustomSingleAutoComplete\");","map":{"version":3,"names":["React","TextField","Autocomplete","Grid","makeStyles","Typography","Tooltip","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","inputRoot","margin","height","props","width","background","disabled","fontSize","border","paddingTop","textFieldInput","marginTop","spacing","CustomSingleAutoComplete","_s","_this","tooltiptext","tooltipPlacement","value","options","name","onSelectHandler","onChangeHandler","isError","errorMsg","source","placeholder","console","log","classes","body","ChipProps","hidden","id","onChange","e","item","onInputChange","event","newInputValue","target","getOptionLabel","option","label","renderOption","state","container","wrap","style","borderTop","children","xs","zeroMinWidth","fileName","_jsxFileName","lineNumber","columnNumber","renderInput","params","_objectSpread","error","helperText","hmtlFor","variant","fullWidth","type","undefined","className","onKeyPress","ev","key","preventDefault","InputLabelProps","textOverflow","whiteSpace","overflow","color","placement","title","_c","$RefreshReg$"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/src/components/AutoComplete/CustomSingleAutoComplete.js"],"sourcesContent":["import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Tooltip } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    margin: \"0\",\n    height: (props) => props.height || \"40px\",\n    width: \"100%\",\n    background: (props) => (props.disabled ? \"#e9ecef\" : \"white\"),\n    \"&&& input\": {\n      fontSize: \"10pt\",\n      border: \"none\",\n      paddingTop: 2,\n    },\n  },\n  textFieldInput: {\n    marginTop: theme.spacing(0),\n  },\n}));\n/** *\n * Author\n * Nargel Velasco - Tech Team\n * @param {String} value - Component target value\n * @param {Array} searchList - The dropdown items.\n * @param {function} onSelectHandler - Component event function\n *\n * chipProps is always hidden to true\n */\nexport default function CustomSingleAutoComplete(props) {\n  const {\n    tooltiptext,\n    tooltipPlacement,\n    value,\n    options,\n    name,\n    onSelectHandler,\n    onChangeHandler,\n    isError,\n    errorMsg,\n    source,\n    disabled,\n    placeholder,\n  } = props;\n  console.log(\"[Options]\", options);\n  const classes = useStyles(props);\n  const body = (\n    <Autocomplete\n      classes={classes}\n      ChipProps={{ hidden: true }}\n      id=\"checkboxes-auto-custom\"\n      options={options || []}\n      value={value}\n      disabled={disabled || false}\n      onChange={(e, item) => {\n        if (item && item.value) {\n          onSelectHandler(item, source);\n        }\n      }}\n      onInputChange={(event, newInputValue) => {\n        if (!newInputValue) {\n          onChangeHandler({ target: { name, value: newInputValue } }, source);\n        }\n      }}\n      getOptionLabel={(option) => option.label}\n      renderOption={(option, state) => {\n        return (\n          <Grid\n            container\n            wrap=\"wrap\"\n            spacing={2}\n            style={{ borderTop: \"1px solid grey\" }}\n          >\n            <Grid item xs zeroMinWidth>\n              <Typography wrap>{option.label || option.value}</Typography>\n            </Grid>\n            <Grid item></Grid>\n          </Grid>\n        );\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          error={isError || false}\n          helperText={\n            isError ? (\n              <label hmtlFor=\"\" style={{ fontSize: \"10pt\" }}>\n                {errorMsg}\n              </label>\n            ) : (\n              \"\"\n            )\n          }\n          name={name}\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          type=\"text\"\n          placeholder={placeholder || \"Select\"}\n          label={placeholder || undefined}\n          className={classes.textFieldInput}\n          style={{ border: \"none !important\" }}\n          onKeyPress={(ev) => {\n            if (ev.key === \"Enter\") {\n              // Do code here\n              ev.preventDefault();\n            }\n          }}\n          InputLabelProps={{\n            style: {\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              width: \"100%\",\n              fontSize: \"10pt\",\n              color: \"black\",\n            },\n          }}\n        />\n      )}\n    />\n  );\n  return (\n    <React.Fragment>\n      {tooltiptext ? (\n        <Tooltip\n          placement={tooltipPlacement || \"bottom-start\"}\n          title={\n            <label style={{ fontSize: \"12px\", paddingTop: \"3px\" }}>\n              {tooltiptext}\n            </label>\n          }\n        >\n          {body}\n        </Tooltip>\n      ) : (\n        <>{body}</>\n      )}\n    </React.Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}