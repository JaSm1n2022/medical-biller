{"ast":null,"code":"export var CLAIM_ACTIONS = {\n  ATTEMPT_TO_FETCH_CLAIM: \"dashboard/@BILLER/ATTEMPT_TO_FETCH_CLAIM\",\n  SET_FETCH_CLAIM_SUCCEED: \"dashboard/@BILLER/SET_FETCH_CLAIM_SUCCEED\",\n  SET_FETCH_CLAIM_FAILURE: \"dashboard/@BILLER/SET_FETCH_CLAIM_FAILURE\",\n  RESET_FETCH_CLAIM_STATE: \"dashboard/@BILLER/RESET_FETCH_CLAIM_STATE\",\n  ATTEMPT_TO_CREATE_CLAIM: \"dashboard/@BILLER/ATTEMPT_TO_CREATE_CLAIM\",\n  SET_CREATE_CLAIM_SUCCEED: \"dashboard/@BILLER/SET_CREATE_CLAIM_SUCCEED\",\n  SET_CREATE_CLAIM_FAILURE: \"dashboard/@BILLER/SET_CREATE_CLAIM_FAILURE\",\n  RESET_CREATE_CLAIM_STATE: \"dashboard/@BILLER/RESET_CREATE_CLAIM_STATE\",\n  ATTEMPT_TO_UPDATE_CLAIM: \"dashboard/@BILLER/ATTEMPT_TO_UPDATE_CLAIM\",\n  SET_UPDATE_CLAIM_SUCCEED: \"dashboard/@BILLER/SET_UPDATE_CLAIM_SUCCEED\",\n  SET_UPDATE_CLAIM_FAILURE: \"dashboard/@BILLER/SET_UPDATE_CLAIM_FAILURE\",\n  RESET_UPDATE_CLAIM_STATE: \"dashboard/@BILLER/RESET_UPDATE_CLAIM_STATE\",\n  ATTEMPT_TO_DELETE_CLAIM: \"dashboard/@BILLER/ATTEMPT_TO_DELETE_CLAIM\",\n  SET_DELETE_CLAIM_SUCCEED: \"dashboard/@BILLER/SET_DELETE_CLAIM_SUCCEED\",\n  SET_DELETE_CLAIM_FAILURE: \"dashboard/@BILLER/SET_DELETE_CLAIM_FAILURE\",\n  RESET_DELETE_CLAIM_STATE: \"dashboard/@BILLER/RESET_DELETE_CLAIM_STATE\"\n};\n//FETCH Claim\nexport var attemptToFetchClaim = function attemptToFetchClaim(data) {\n  return {\n    type: CLAIM_ACTIONS.ATTEMPT_TO_FETCH_CLAIM,\n    payload: data\n  };\n};\nexport var setFetchClaimSucceed = function setFetchClaimSucceed(payload) {\n  return {\n    type: CLAIM_ACTIONS.SET_FETCH_CLAIM_SUCCEED,\n    payload: payload\n  };\n};\nexport var setFetchClaimFailure = function setFetchClaimFailure(payload) {\n  return {\n    type: CLAIM_ACTIONS.SET_FETCH_CLAIM_FAILURE,\n    payload: payload\n  };\n};\nexport var resetFetchClaimState = function resetFetchClaimState() {\n  return {\n    type: CLAIM_ACTIONS.RESET_FETCH_CLAIM_STATE\n  };\n};\n\n//CREATE Claim\nexport var attemptToCreateClaim = function attemptToCreateClaim(data) {\n  return {\n    type: CLAIM_ACTIONS.ATTEMPT_TO_CREATE_CLAIM,\n    payload: data\n  };\n};\nexport var setCreateClaimSucceed = function setCreateClaimSucceed(payload) {\n  return {\n    type: CLAIM_ACTIONS.SET_CREATE_CLAIM_SUCCEED,\n    payload: payload\n  };\n};\nexport var setCreateClaimFailure = function setCreateClaimFailure(payload) {\n  return {\n    type: CLAIM_ACTIONS.SET_CREATE_CLAIM_FAILURE,\n    payload: payload\n  };\n};\nexport var resetCreateClaimState = function resetCreateClaimState() {\n  return {\n    type: CLAIM_ACTIONS.RESET_CREATE_CLAIM_STATE\n  };\n};\n\n//UPDATE Claim\nexport var attemptToUpdateClaim = function attemptToUpdateClaim(data) {\n  return {\n    type: CLAIM_ACTIONS.ATTEMPT_TO_UPDATE_CLAIM,\n    payload: data\n  };\n};\nexport var setUpdateClaimSucceed = function setUpdateClaimSucceed(payload) {\n  return {\n    type: CLAIM_ACTIONS.SET_UPDATE_CLAIM_SUCCEED,\n    payload: payload\n  };\n};\nexport var setUpdateClaimFailure = function setUpdateClaimFailure(payload) {\n  return {\n    type: CLAIM_ACTIONS.SET_UPDATE_CLAIM_FAILURE,\n    payload: payload\n  };\n};\nexport var resetUpdateClaimState = function resetUpdateClaimState() {\n  return {\n    type: CLAIM_ACTIONS.RESET_UPDATE_CLAIM_STATE\n  };\n};\n\n//DELETE Claim\nexport var attemptToDeleteClaim = function attemptToDeleteClaim(data) {\n  return {\n    type: CLAIM_ACTIONS.ATTEMPT_TO_DELETE_CLAIM,\n    payload: data\n  };\n};\nexport var setDeleteClaimSucceed = function setDeleteClaimSucceed(payload) {\n  return {\n    type: CLAIM_ACTIONS.SET_DELETE_CLAIM_SUCCEED,\n    payload: payload\n  };\n};\nexport var setDeleteClaimFailure = function setDeleteClaimFailure(payload) {\n  return {\n    type: CLAIM_ACTIONS.SET_DELETE_CLAIM_FAILURE,\n    payload: payload\n  };\n};\nexport var resetDeleteClaimState = function resetDeleteClaimState() {\n  return {\n    type: CLAIM_ACTIONS.RESET_DELETE_CLAIM_STATE\n  };\n};","map":{"version":3,"names":["CLAIM_ACTIONS","ATTEMPT_TO_FETCH_CLAIM","SET_FETCH_CLAIM_SUCCEED","SET_FETCH_CLAIM_FAILURE","RESET_FETCH_CLAIM_STATE","ATTEMPT_TO_CREATE_CLAIM","SET_CREATE_CLAIM_SUCCEED","SET_CREATE_CLAIM_FAILURE","RESET_CREATE_CLAIM_STATE","ATTEMPT_TO_UPDATE_CLAIM","SET_UPDATE_CLAIM_SUCCEED","SET_UPDATE_CLAIM_FAILURE","RESET_UPDATE_CLAIM_STATE","ATTEMPT_TO_DELETE_CLAIM","SET_DELETE_CLAIM_SUCCEED","SET_DELETE_CLAIM_FAILURE","RESET_DELETE_CLAIM_STATE","attemptToFetchClaim","data","type","payload","setFetchClaimSucceed","setFetchClaimFailure","resetFetchClaimState","attemptToCreateClaim","setCreateClaimSucceed","setCreateClaimFailure","resetCreateClaimState","attemptToUpdateClaim","setUpdateClaimSucceed","setUpdateClaimFailure","resetUpdateClaimState","attemptToDeleteClaim","setDeleteClaimSucceed","setDeleteClaimFailure","resetDeleteClaimState"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/src/store/actions/claimAction.js"],"sourcesContent":["export const CLAIM_ACTIONS = {\n  ATTEMPT_TO_FETCH_CLAIM: \"dashboard/@BILLER/ATTEMPT_TO_FETCH_CLAIM\",\n  SET_FETCH_CLAIM_SUCCEED: \"dashboard/@BILLER/SET_FETCH_CLAIM_SUCCEED\",\n  SET_FETCH_CLAIM_FAILURE: \"dashboard/@BILLER/SET_FETCH_CLAIM_FAILURE\",\n  RESET_FETCH_CLAIM_STATE: \"dashboard/@BILLER/RESET_FETCH_CLAIM_STATE\",\n\n  ATTEMPT_TO_CREATE_CLAIM: \"dashboard/@BILLER/ATTEMPT_TO_CREATE_CLAIM\",\n  SET_CREATE_CLAIM_SUCCEED: \"dashboard/@BILLER/SET_CREATE_CLAIM_SUCCEED\",\n  SET_CREATE_CLAIM_FAILURE: \"dashboard/@BILLER/SET_CREATE_CLAIM_FAILURE\",\n  RESET_CREATE_CLAIM_STATE: \"dashboard/@BILLER/RESET_CREATE_CLAIM_STATE\",\n\n  ATTEMPT_TO_UPDATE_CLAIM: \"dashboard/@BILLER/ATTEMPT_TO_UPDATE_CLAIM\",\n  SET_UPDATE_CLAIM_SUCCEED: \"dashboard/@BILLER/SET_UPDATE_CLAIM_SUCCEED\",\n  SET_UPDATE_CLAIM_FAILURE: \"dashboard/@BILLER/SET_UPDATE_CLAIM_FAILURE\",\n  RESET_UPDATE_CLAIM_STATE: \"dashboard/@BILLER/RESET_UPDATE_CLAIM_STATE\",\n\n  ATTEMPT_TO_DELETE_CLAIM: \"dashboard/@BILLER/ATTEMPT_TO_DELETE_CLAIM\",\n  SET_DELETE_CLAIM_SUCCEED: \"dashboard/@BILLER/SET_DELETE_CLAIM_SUCCEED\",\n  SET_DELETE_CLAIM_FAILURE: \"dashboard/@BILLER/SET_DELETE_CLAIM_FAILURE\",\n  RESET_DELETE_CLAIM_STATE: \"dashboard/@BILLER/RESET_DELETE_CLAIM_STATE\",\n};\n//FETCH Claim\nexport const attemptToFetchClaim = (data: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.ATTEMPT_TO_FETCH_CLAIM,\n  payload: data,\n});\nexport const setFetchClaimSucceed = (payload: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.SET_FETCH_CLAIM_SUCCEED,\n  payload,\n});\n\nexport const setFetchClaimFailure = (payload: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.SET_FETCH_CLAIM_FAILURE,\n  payload,\n});\nexport const resetFetchClaimState = (): BaseAction => ({\n  type: CLAIM_ACTIONS.RESET_FETCH_CLAIM_STATE,\n});\n\n//CREATE Claim\nexport const attemptToCreateClaim = (data: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.ATTEMPT_TO_CREATE_CLAIM,\n  payload: data,\n});\nexport const setCreateClaimSucceed = (payload: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.SET_CREATE_CLAIM_SUCCEED,\n  payload,\n});\n\nexport const setCreateClaimFailure = (payload: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.SET_CREATE_CLAIM_FAILURE,\n  payload,\n});\nexport const resetCreateClaimState = (): BaseAction => ({\n  type: CLAIM_ACTIONS.RESET_CREATE_CLAIM_STATE,\n});\n\n//UPDATE Claim\nexport const attemptToUpdateClaim = (data: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.ATTEMPT_TO_UPDATE_CLAIM,\n  payload: data,\n});\nexport const setUpdateClaimSucceed = (payload: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.SET_UPDATE_CLAIM_SUCCEED,\n  payload,\n});\n\nexport const setUpdateClaimFailure = (payload: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.SET_UPDATE_CLAIM_FAILURE,\n  payload,\n});\nexport const resetUpdateClaimState = (): BaseAction => ({\n  type: CLAIM_ACTIONS.RESET_UPDATE_CLAIM_STATE,\n});\n\n//DELETE Claim\nexport const attemptToDeleteClaim = (data: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.ATTEMPT_TO_DELETE_CLAIM,\n  payload: data,\n});\nexport const setDeleteClaimSucceed = (payload: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.SET_DELETE_CLAIM_SUCCEED,\n  payload,\n});\n\nexport const setDeleteClaimFailure = (payload: Object): BaseAction => ({\n  type: CLAIM_ACTIONS.SET_DELETE_CLAIM_FAILURE,\n  payload,\n});\nexport const resetDeleteClaimState = (): BaseAction => ({\n  type: CLAIM_ACTIONS.RESET_DELETE_CLAIM_STATE,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}