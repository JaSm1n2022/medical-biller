{"ast":null,"code":"import _slicedToArray from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/nargelmac/Documents/GitHub/medical-biller/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/nargelmac/Documents/GitHub/medical-biller/src/App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, withRouter, Redirect } from \"react-router-dom\";\nimport { ToastProvider, DefaultToastContainer } from \"react-toast-notifications\";\nimport Admin from \"layouts/Admin.js\";\nimport Login from \"views/Login\";\nimport RTL from \"layouts/RTL.js\";\nimport { supabaseClient } from \"./config/SupabaseClient\";\nimport \"assets/css/material-dashboard-react.css?v=1.10.0\";\nimport { useState } from \"react\";\nimport { profileListStateSelector } from \"store/selectors/profileSelector\";\nimport { attemptToFetchProfile } from \"store/actions/profileAction\";\nimport { connect } from \"react-redux\";\nimport { ACTION_STATUSES } from \"utils/constants\";\nimport { resetFetchProfileState } from \"store/actions/profileAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CustomToastContainer = function CustomToastContainer(props) {\n  return /*#__PURE__*/_jsxDEV(DefaultToastContainer, _objectSpread(_objectSpread({}, props), {}, {\n    style: {\n      zIndex: 9999\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, _this);\n};\n_c = CustomToastContainer;\nvar userProfile = {};\nfunction App(props) {\n  _s();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    session = _useState2[0],\n    setSession = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    signedIn = _useState4[0],\n    setSignedIn = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    requestor = _useState6[0],\n    setRequestor = _useState6[1];\n  useEffect(function () {\n    supabaseClient.auth.getSession().then(function (_ref) {\n      var session = _ref.data.session;\n      setSession(session);\n    });\n    supabaseClient.auth.onAuthStateChange(function (event, session) {\n      console.log(\"[application]\", event, session);\n      if (event === \"SIGNED_OUT\") {\n        setSignedIn(false);\n      } else {\n        setSignedIn(true);\n      }\n    });\n  }, []);\n  useEffect(function () {\n    //\tprops.onTryAutoSignup();\n    supabaseClient.auth.onAuthStateChange(function (event, session) {\n      console.log(\"[application]\", event, session);\n      if (event === \"SIGNED_OUT\") {\n        setSignedIn(false);\n      } else {\n        //  setRequestor(session.user.email);\n        if (session) {\n          props.fetchProfile({\n            email: session.user.email\n          });\n        }\n        //    setSignedIn(true);\n      }\n    });\n  }, [session]);\n  if (props.profileState && props.profileState.status === ACTION_STATUSES.SUCCEED) {\n    userProfile = props.profileState.data[0];\n    //props.resetProfiles();\n  }\n\n  console.log(\"[signed/session]\", signedIn, session);\n  console.log(\"[Profile]\", props.profileState, userProfile);\n  return /*#__PURE__*/_jsxDEV(ToastProvider, {\n    components: {\n      ToastContainer: CustomToastContainer\n    },\n    children: userProfile && userProfile.companyId ? /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        component: Admin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rtl\",\n        component: RTL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        from: \"/\",\n        to: \"/admin/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : !signedIn ? /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : signedIn && !session ? /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dY2laMQGOB31vSKDlp+H8nIZQ6k=\");\n_c2 = App;\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    profileState: profileListStateSelector(store)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchProfile: function fetchProfile(data) {\n      return dispatch(attemptToFetchProfile(data));\n    },\n    resetProfiles: function resetProfiles() {\n      return dispatch(resetFetchProfileState());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomToastContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Switch","Route","withRouter","Redirect","ToastProvider","DefaultToastContainer","Admin","Login","RTL","supabaseClient","useState","profileListStateSelector","attemptToFetchProfile","connect","ACTION_STATUSES","resetFetchProfileState","jsxDEV","_jsxDEV","CustomToastContainer","props","_objectSpread","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","userProfile","App","_s","_useState","_useState2","_slicedToArray","session","setSession","_useState3","_useState4","signedIn","setSignedIn","_useState5","_useState6","requestor","setRequestor","auth","getSession","then","_ref","data","onAuthStateChange","event","console","log","fetchProfile","email","user","profileState","status","SUCCEED","components","ToastContainer","children","companyId","path","component","from","to","_c2","mapStateToProps","store","mapDispatchToProps","dispatch","resetProfiles","$RefreshReg$"],"sources":["/Users/nargelmac/Documents/GitHub/medical-biller/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter,\n  Redirect,\n} from \"react-router-dom\";\nimport {\n  ToastProvider,\n  DefaultToastContainer,\n} from \"react-toast-notifications\";\nimport Admin from \"layouts/Admin.js\";\nimport Login from \"views/Login\";\nimport RTL from \"layouts/RTL.js\";\nimport { supabaseClient } from \"./config/SupabaseClient\";\nimport \"assets/css/material-dashboard-react.css?v=1.10.0\";\nimport { useState } from \"react\";\nimport { profileListStateSelector } from \"store/selectors/profileSelector\";\nimport { attemptToFetchProfile } from \"store/actions/profileAction\";\nimport { connect } from \"react-redux\";\nimport { ACTION_STATUSES } from \"utils/constants\";\nimport { resetFetchProfileState } from \"store/actions/profileAction\";\nexport const CustomToastContainer = (props) => (\n  <DefaultToastContainer {...props} style={{ zIndex: 9999 }} />\n);\nlet userProfile = {};\nfunction App(props) {\n  const [session, setSession] = useState(null);\n  const [signedIn, setSignedIn] = useState(true);\n  const [requestor, setRequestor] = useState(\"\");\n\n  useEffect(() => {\n    supabaseClient.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n    });\n\n    supabaseClient.auth.onAuthStateChange((event, session) => {\n      console.log(\"[application]\", event, session);\n      if (event === \"SIGNED_OUT\") {\n        setSignedIn(false);\n      } else {\n        setSignedIn(true);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    //\tprops.onTryAutoSignup();\n    supabaseClient.auth.onAuthStateChange((event, session) => {\n      console.log(\"[application]\", event, session);\n      if (event === \"SIGNED_OUT\") {\n        setSignedIn(false);\n      } else {\n        //  setRequestor(session.user.email);\n        if (session) {\n          props.fetchProfile({ email: session.user.email });\n        }\n        //    setSignedIn(true);\n      }\n    });\n  }, [session]);\n  if (\n    props.profileState &&\n    props.profileState.status === ACTION_STATUSES.SUCCEED\n  ) {\n    userProfile = props.profileState.data[0];\n    //props.resetProfiles();\n  }\n  console.log(\"[signed/session]\", signedIn, session);\n  console.log(\"[Profile]\", props.profileState, userProfile);\n  return (\n    <ToastProvider components={{ ToastContainer: CustomToastContainer }}>\n      {userProfile && userProfile.companyId ? (\n        <Switch>\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"/rtl\" component={RTL} />\n          <Redirect from=\"/\" to=\"/admin/dashboard\" />\n        </Switch>\n      ) : !signedIn ? (\n        <Switch>\n          <Route path=\"/\" component={Login} />\n        </Switch>\n      ) : signedIn && !session ? (\n        <Switch>\n          <Route path=\"/\" component={Login} />\n        </Switch>\n      ) : null}\n    </ToastProvider>\n  );\n}\n\nconst mapStateToProps = (store) => ({\n  profileState: profileListStateSelector(store),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchProfile: (data) => dispatch(attemptToFetchProfile(data)),\n  resetProfiles: () => dispatch(resetFetchProfileState()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}